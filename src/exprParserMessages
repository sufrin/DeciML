phrase: BRA ALT STRING TO BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 2156.
##
## prim -> BRA ALT revcases ALT . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 2155.
##
## prim -> BRA ALT revcases . ALT KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA ALT TO
##
## Ends in an error in state: 2154.
##
## prim -> BRA ALT . revcases ALT KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL0 TO
##
## Ends in an error in state: 2150.
##
## prim -> BRA BINL0 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL0 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL1 TO
##
## Ends in an error in state: 2146.
##
## prim -> BRA BINL1 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL1 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL2 TO
##
## Ends in an error in state: 2142.
##
## prim -> BRA BINL2 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL2 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL3 TO
##
## Ends in an error in state: 2138.
##
## prim -> BRA BINL3 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL3 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL4 TO
##
## Ends in an error in state: 2134.
##
## prim -> BRA BINL4 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL4 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL5 TO
##
## Ends in an error in state: 2130.
##
## prim -> BRA BINL5 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL5 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL6 TO
##
## Ends in an error in state: 2126.
##
## prim -> BRA BINL6 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL6 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL7 TO
##
## Ends in an error in state: 2122.
##
## prim -> BRA BINL7 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL7 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL8 TO
##
## Ends in an error in state: 2118.
##
## prim -> BRA BINL8 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL8 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINL9 TO
##
## Ends in an error in state: 2114.
##
## prim -> BRA BINL9 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL9 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR0 TO
##
## Ends in an error in state: 2110.
##
## prim -> BRA BINR0 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR0 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR1 TO
##
## Ends in an error in state: 2106.
##
## prim -> BRA BINR1 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR1 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR2 TO
##
## Ends in an error in state: 2102.
##
## prim -> BRA BINR2 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR2 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR3 TO
##
## Ends in an error in state: 2098.
##
## prim -> BRA BINR3 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR3 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR4 TO
##
## Ends in an error in state: 2094.
##
## prim -> BRA BINR4 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR4 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR5 TO
##
## Ends in an error in state: 2090.
##
## prim -> BRA BINR5 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR5 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR6 TO
##
## Ends in an error in state: 2086.
##
## prim -> BRA BINR6 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR6 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR7 TO
##
## Ends in an error in state: 2082.
##
## prim -> BRA BINR7 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR7 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR8 TO
##
## Ends in an error in state: 2078.
##
## prim -> BRA BINR8 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR8 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA BINR9 TO
##
## Ends in an error in state: 2074.
##
## prim -> BRA BINR9 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR9 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL0 TO
##
## Ends in an error in state: 2070.
##
## prim -> BRA CONL0 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL0 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL1 TO
##
## Ends in an error in state: 2066.
##
## prim -> BRA CONL1 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL1 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL2 TO
##
## Ends in an error in state: 2062.
##
## prim -> BRA CONL2 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL2 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL3 TO
##
## Ends in an error in state: 2058.
##
## prim -> BRA CONL3 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL3 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL4 TO
##
## Ends in an error in state: 2054.
##
## prim -> BRA CONL4 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL4 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL5 TO
##
## Ends in an error in state: 2050.
##
## prim -> BRA CONL5 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL5 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL6 TO
##
## Ends in an error in state: 2046.
##
## prim -> BRA CONL6 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL6 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL7 TO
##
## Ends in an error in state: 2042.
##
## prim -> BRA CONL7 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL7 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL8 TO
##
## Ends in an error in state: 2038.
##
## prim -> BRA CONL8 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL8 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONL9 TO
##
## Ends in an error in state: 2034.
##
## prim -> BRA CONL9 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL9 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR0 TO
##
## Ends in an error in state: 2030.
##
## prim -> BRA CONR0 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR0 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR1 TO
##
## Ends in an error in state: 2026.
##
## prim -> BRA CONR1 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR1 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR2 TO
##
## Ends in an error in state: 2022.
##
## prim -> BRA CONR2 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR2 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR3 TO
##
## Ends in an error in state: 2018.
##
## prim -> BRA CONR3 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR3 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR4 TO
##
## Ends in an error in state: 2014.
##
## prim -> BRA CONR4 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR4 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR5 TO
##
## Ends in an error in state: 2010.
##
## prim -> BRA CONR5 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR5 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR6 TO
##
## Ends in an error in state: 2006.
##
## prim -> BRA CONR6 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR6 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR7 TO
##
## Ends in an error in state: 2002.
##
## prim -> BRA CONR7 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR7 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR8 TO
##
## Ends in an error in state: 1998.
##
## prim -> BRA CONR8 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR8 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA CONR9 TO
##
## Ends in an error in state: 1994.
##
## prim -> BRA CONR9 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR9 . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA EQ TO
##
## Ends in an error in state: 1990.
##
## prim -> BRA EQ . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA EQ . expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL0 TO
##
## Ends in an error in state: 2241.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL1 TO
##
## Ends in an error in state: 2239.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL2 TO
##
## Ends in an error in state: 2237.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL3 TO
##
## Ends in an error in state: 2235.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL4 TO
##
## Ends in an error in state: 2233.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL5 TO
##
## Ends in an error in state: 2231.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL6 TO
##
## Ends in an error in state: 2229.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL7 TO
##
## Ends in an error in state: 2227.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL8 TO
##
## Ends in an error in state: 2225.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINL9 TO
##
## Ends in an error in state: 2223.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR0 TO
##
## Ends in an error in state: 2221.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR1 TO
##
## Ends in an error in state: 2219.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR2 TO
##
## Ends in an error in state: 2217.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR3 TO
##
## Ends in an error in state: 2215.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR4 TO
##
## Ends in an error in state: 2213.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR5 TO
##
## Ends in an error in state: 2211.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR6 TO
##
## Ends in an error in state: 2209.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR7 TO
##
## Ends in an error in state: 2207.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR8 TO
##
## Ends in an error in state: 2205.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING BINR9 TO
##
## Ends in an error in state: 2203.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL0 TO
##
## Ends in an error in state: 2201.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL1 TO
##
## Ends in an error in state: 2199.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL2 TO
##
## Ends in an error in state: 2197.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL3 TO
##
## Ends in an error in state: 2195.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL4 TO
##
## Ends in an error in state: 2193.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL5 TO
##
## Ends in an error in state: 2191.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL6 TO
##
## Ends in an error in state: 2189.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL7 TO
##
## Ends in an error in state: 2187.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL8 TO
##
## Ends in an error in state: 2185.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONL9 TO
##
## Ends in an error in state: 2183.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR0 TO
##
## Ends in an error in state: 2181.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR1 TO
##
## Ends in an error in state: 2179.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR2 TO
##
## Ends in an error in state: 2177.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR3 TO
##
## Ends in an error in state: 2175.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR4 TO
##
## Ends in an error in state: 2173.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR5 TO
##
## Ends in an error in state: 2171.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR6 TO
##
## Ends in an error in state: 2169.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR7 TO
##
## Ends in an error in state: 2167.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR8 TO
##
## Ends in an error in state: 2165.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING CONR9 TO
##
## Ends in an error in state: 2163.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA STRING EQ TO
##
## Ends in an error in state: 2161.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO BRA TO
##
## Ends in an error in state: 1989.
##
## prim -> BRA . revexprlist KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL0 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL1 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL2 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL3 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL4 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL5 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL6 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL7 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL8 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL9 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR0 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR1 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR2 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR3 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR4 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR5 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR6 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR7 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR8 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR9 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL0 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL1 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL2 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL3 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL4 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL5 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL6 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL7 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL8 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL9 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR0 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR1 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR2 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR3 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR4 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR5 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR6 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR7 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR8 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR9 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . EQ KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL0 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL1 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL2 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL3 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL4 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL5 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL6 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL7 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL8 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL9 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR0 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR1 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR2 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR3 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR4 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR5 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR6 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR7 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR8 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR9 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL0 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL1 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL2 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL3 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL4 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL5 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL6 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL7 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL8 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL9 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR0 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR1 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR2 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR3 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR4 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR5 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR6 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR7 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR8 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR9 expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . EQ expr KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL0 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL1 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL2 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL3 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL4 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL5 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL6 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL7 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL8 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL9 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR0 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR1 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR2 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR3 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR4 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR5 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR6 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR7 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR8 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR9 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL0 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL1 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL2 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL3 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL4 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL5 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL6 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL7 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL8 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL9 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR0 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR1 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR2 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR3 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR4 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR5 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR6 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR7 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR8 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR9 KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr EQ KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . ALT revcases ALT KET [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO FUN ALT TO
##
## Ends in an error in state: 1986.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 1987.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO FUN TO
##
## Ends in an error in state: 1985.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 4344.
##
## prim -> BRA ALT revcases ALT . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO IF STRING THEN STRING ELSE TO
##
## Ends in an error in state: 1983.
##
## topexpr -> IF expr THEN expr ELSE . topexpr [ ALT ]
##
## The known suffix of the stack is as follows:
## IF expr THEN expr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO IF STRING THEN TO
##
## Ends in an error in state: 1981.
##
## topexpr -> IF expr THEN . expr ELSE topexpr [ ALT ]
##
## The known suffix of the stack is as follows:
## IF expr THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO IF TO
##
## Ends in an error in state: 1979.
##
## topexpr -> IF . expr THEN expr ELSE topexpr [ ALT ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 4343.
##
## prim -> BRA ALT revcases . ALT KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO LAM BRA STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 1975.
##
## revcases -> revcases . ALT case [ KET ALT ]
## topexpr -> LAM BRA revcases . KET [ ALT ]
##
## The known suffix of the stack is as follows:
## LAM BRA revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO LAM BRA TO
##
## Ends in an error in state: 477.
##
## nonempty_list(simplex) -> BRA . revexprlist KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET [ TO ]
## nonempty_list(simplex) -> BRA . revexprlist KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET nonempty_list(simplex) [ TO ]
## topexpr -> LAM BRA . revcases KET [ ALT ]
##
## The known suffix of the stack is as follows:
## LAM BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO LAM STRING TO TO
##
## Ends in an error in state: 1978.
##
## topexpr -> LAM nonempty_list(simplex) TO . topexpr [ ALT ]
##
## The known suffix of the stack is as follows:
## LAM nonempty_list(simplex) TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO LAM TO
##
## Ends in an error in state: 476.
##
## topexpr -> LAM . nonempty_list(simplex) TO topexpr [ ALT ]
## topexpr -> LAM . BRA revcases KET [ ALT ]
##
## The known suffix of the stack is as follows:
## LAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO LET ID EQ ID IN TO
##
## Ends in an error in state: 475.
##
## topexpr -> LET revdefs IN . topexpr [ ALT ]
##
## The known suffix of the stack is as follows:
## LET revdefs IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO LET ID EQ LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 474.
##
## revdefs -> revdefs . SEMI def [ SEMI IN ]
## topexpr -> LET revdefs . IN topexpr [ ALT ]
##
## The known suffix of the stack is as follows:
## LET revdefs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO LET TO
##
## Ends in an error in state: 473.
##
## topexpr -> LET . revdefs IN topexpr [ ALT ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL0 TO
##
## Ends in an error in state: 2330.
##
## expr -> expr BINL0 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL1 TO
##
## Ends in an error in state: 2322.
##
## expr -> expr BINL1 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL2 TO
##
## Ends in an error in state: 2314.
##
## expr -> expr BINL2 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL3 TO
##
## Ends in an error in state: 2306.
##
## expr -> expr BINL3 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL4 TO
##
## Ends in an error in state: 2298.
##
## expr -> expr BINL4 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL5 TO
##
## Ends in an error in state: 2290.
##
## expr -> expr BINL5 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL6 TO
##
## Ends in an error in state: 2282.
##
## expr -> expr BINL6 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL7 TO
##
## Ends in an error in state: 2274.
##
## expr -> expr BINL7 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL8 TO
##
## Ends in an error in state: 2266.
##
## expr -> expr BINL8 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINL9 TO
##
## Ends in an error in state: 2258.
##
## expr -> expr BINL9 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR0 TO
##
## Ends in an error in state: 2328.
##
## expr -> expr BINR0 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR1 TO
##
## Ends in an error in state: 2320.
##
## expr -> expr BINR1 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR2 TO
##
## Ends in an error in state: 2312.
##
## expr -> expr BINR2 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR3 TO
##
## Ends in an error in state: 2304.
##
## expr -> expr BINR3 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR4 TO
##
## Ends in an error in state: 2296.
##
## expr -> expr BINR4 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR5 TO
##
## Ends in an error in state: 2288.
##
## expr -> expr BINR5 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR6 TO
##
## Ends in an error in state: 2280.
##
## expr -> expr BINR6 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR7 TO
##
## Ends in an error in state: 2272.
##
## expr -> expr BINR7 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR8 TO
##
## Ends in an error in state: 2264.
##
## expr -> expr BINR8 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING BINR9 TO
##
## Ends in an error in state: 2256.
##
## expr -> expr BINR9 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL0 TO
##
## Ends in an error in state: 2326.
##
## expr -> expr CONL0 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL1 TO
##
## Ends in an error in state: 2318.
##
## expr -> expr CONL1 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL2 TO
##
## Ends in an error in state: 2310.
##
## expr -> expr CONL2 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL3 TO
##
## Ends in an error in state: 2302.
##
## expr -> expr CONL3 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL4 TO
##
## Ends in an error in state: 2294.
##
## expr -> expr CONL4 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL5 TO
##
## Ends in an error in state: 2286.
##
## expr -> expr CONL5 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL6 TO
##
## Ends in an error in state: 2278.
##
## expr -> expr CONL6 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL7 TO
##
## Ends in an error in state: 2270.
##
## expr -> expr CONL7 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL8 TO
##
## Ends in an error in state: 2262.
##
## expr -> expr CONL8 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONL9 TO
##
## Ends in an error in state: 2252.
##
## expr -> expr CONL9 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR0 TO
##
## Ends in an error in state: 2324.
##
## expr -> expr CONR0 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR1 TO
##
## Ends in an error in state: 2316.
##
## expr -> expr CONR1 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR2 TO
##
## Ends in an error in state: 2308.
##
## expr -> expr CONR2 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR3 TO
##
## Ends in an error in state: 2300.
##
## expr -> expr CONR3 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR4 TO
##
## Ends in an error in state: 2292.
##
## expr -> expr CONR4 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR5 TO
##
## Ends in an error in state: 2284.
##
## expr -> expr CONR5 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR6 TO
##
## Ends in an error in state: 2276.
##
## expr -> expr CONR6 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR7 TO
##
## Ends in an error in state: 2268.
##
## expr -> expr CONR7 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR8 TO
##
## Ends in an error in state: 2260.
##
## expr -> expr CONR8 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING CONR9 TO
##
## Ends in an error in state: 2250.
##
## expr -> expr CONR9 . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING EQ TO
##
## Ends in an error in state: 2248.
##
## expr -> expr EQ . expr [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO STRING TO
##
## Ends in an error in state: 2254.
##
## app -> app . prim [ STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## term -> app . [ EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT STRING TO TO
##
## Ends in an error in state: 470.
##
## case -> term TO . topexpr [ ALT ]
##
## The known suffix of the stack is as follows:
## term TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA ALT TO
##
## Ends in an error in state: 4342.
##
## prim -> BRA ALT . revcases ALT KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL0 TO
##
## Ends in an error in state: 4338.
##
## prim -> BRA BINL0 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL0 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL1 TO
##
## Ends in an error in state: 4334.
##
## prim -> BRA BINL1 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL1 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL2 TO
##
## Ends in an error in state: 4330.
##
## prim -> BRA BINL2 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL2 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL3 TO
##
## Ends in an error in state: 4326.
##
## prim -> BRA BINL3 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL3 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL4 TO
##
## Ends in an error in state: 4322.
##
## prim -> BRA BINL4 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL4 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL5 TO
##
## Ends in an error in state: 4318.
##
## prim -> BRA BINL5 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL5 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL6 TO
##
## Ends in an error in state: 4314.
##
## prim -> BRA BINL6 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL6 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL7 TO
##
## Ends in an error in state: 4310.
##
## prim -> BRA BINL7 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL7 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL8 TO
##
## Ends in an error in state: 4306.
##
## prim -> BRA BINL8 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL8 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINL9 TO
##
## Ends in an error in state: 4302.
##
## prim -> BRA BINL9 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL9 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR0 TO
##
## Ends in an error in state: 4298.
##
## prim -> BRA BINR0 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR0 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR1 TO
##
## Ends in an error in state: 4294.
##
## prim -> BRA BINR1 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR1 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR2 TO
##
## Ends in an error in state: 4290.
##
## prim -> BRA BINR2 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR2 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR3 TO
##
## Ends in an error in state: 4286.
##
## prim -> BRA BINR3 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR3 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR4 TO
##
## Ends in an error in state: 4282.
##
## prim -> BRA BINR4 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR4 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR5 TO
##
## Ends in an error in state: 4278.
##
## prim -> BRA BINR5 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR5 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR6 TO
##
## Ends in an error in state: 4274.
##
## prim -> BRA BINR6 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR6 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR7 TO
##
## Ends in an error in state: 4270.
##
## prim -> BRA BINR7 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR7 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR8 TO
##
## Ends in an error in state: 4266.
##
## prim -> BRA BINR8 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR8 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BINR9 TO
##
## Ends in an error in state: 4262.
##
## prim -> BRA BINR9 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR9 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 2587.
##
## prim -> BRA ALT revcases ALT . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 2586.
##
## prim -> BRA ALT revcases . ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA ALT TO
##
## Ends in an error in state: 2585.
##
## prim -> BRA ALT . revcases ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL0 TO
##
## Ends in an error in state: 2581.
##
## prim -> BRA BINL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL1 TO
##
## Ends in an error in state: 2577.
##
## prim -> BRA BINL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL2 TO
##
## Ends in an error in state: 2573.
##
## prim -> BRA BINL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL3 TO
##
## Ends in an error in state: 2569.
##
## prim -> BRA BINL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL4 TO
##
## Ends in an error in state: 2565.
##
## prim -> BRA BINL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL5 TO
##
## Ends in an error in state: 2561.
##
## prim -> BRA BINL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL6 TO
##
## Ends in an error in state: 2557.
##
## prim -> BRA BINL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL7 TO
##
## Ends in an error in state: 2553.
##
## prim -> BRA BINL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL8 TO
##
## Ends in an error in state: 2549.
##
## prim -> BRA BINL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINL9 TO
##
## Ends in an error in state: 2545.
##
## prim -> BRA BINL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR0 TO
##
## Ends in an error in state: 2541.
##
## prim -> BRA BINR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR1 TO
##
## Ends in an error in state: 2537.
##
## prim -> BRA BINR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR2 TO
##
## Ends in an error in state: 2533.
##
## prim -> BRA BINR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR3 TO
##
## Ends in an error in state: 2529.
##
## prim -> BRA BINR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR4 TO
##
## Ends in an error in state: 2525.
##
## prim -> BRA BINR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR5 TO
##
## Ends in an error in state: 2521.
##
## prim -> BRA BINR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR6 TO
##
## Ends in an error in state: 2517.
##
## prim -> BRA BINR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR7 TO
##
## Ends in an error in state: 2513.
##
## prim -> BRA BINR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR8 TO
##
## Ends in an error in state: 2509.
##
## prim -> BRA BINR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA BINR9 TO
##
## Ends in an error in state: 2505.
##
## prim -> BRA BINR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL0 TO
##
## Ends in an error in state: 2501.
##
## prim -> BRA CONL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL1 TO
##
## Ends in an error in state: 2497.
##
## prim -> BRA CONL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL2 TO
##
## Ends in an error in state: 2493.
##
## prim -> BRA CONL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL3 TO
##
## Ends in an error in state: 2489.
##
## prim -> BRA CONL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL4 TO
##
## Ends in an error in state: 2485.
##
## prim -> BRA CONL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL5 TO
##
## Ends in an error in state: 2481.
##
## prim -> BRA CONL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL6 TO
##
## Ends in an error in state: 2477.
##
## prim -> BRA CONL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL7 TO
##
## Ends in an error in state: 2473.
##
## prim -> BRA CONL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL8 TO
##
## Ends in an error in state: 2469.
##
## prim -> BRA CONL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONL9 TO
##
## Ends in an error in state: 2465.
##
## prim -> BRA CONL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR0 TO
##
## Ends in an error in state: 2461.
##
## prim -> BRA CONR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR1 TO
##
## Ends in an error in state: 2457.
##
## prim -> BRA CONR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR2 TO
##
## Ends in an error in state: 2453.
##
## prim -> BRA CONR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR3 TO
##
## Ends in an error in state: 2449.
##
## prim -> BRA CONR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR4 TO
##
## Ends in an error in state: 2445.
##
## prim -> BRA CONR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR5 TO
##
## Ends in an error in state: 2441.
##
## prim -> BRA CONR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR6 TO
##
## Ends in an error in state: 2437.
##
## prim -> BRA CONR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR7 TO
##
## Ends in an error in state: 2433.
##
## prim -> BRA CONR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR8 TO
##
## Ends in an error in state: 2429.
##
## prim -> BRA CONR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA CONR9 TO
##
## Ends in an error in state: 2425.
##
## prim -> BRA CONR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA EQ TO
##
## Ends in an error in state: 214.
##
## prim -> BRA EQ . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA EQ . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL0 TO
##
## Ends in an error in state: 2672.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL1 TO
##
## Ends in an error in state: 2670.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL2 TO
##
## Ends in an error in state: 2668.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL3 TO
##
## Ends in an error in state: 2666.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL4 TO
##
## Ends in an error in state: 2664.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL5 TO
##
## Ends in an error in state: 2662.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL6 TO
##
## Ends in an error in state: 2660.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL7 TO
##
## Ends in an error in state: 2658.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL8 TO
##
## Ends in an error in state: 2656.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINL9 TO
##
## Ends in an error in state: 2654.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR0 TO
##
## Ends in an error in state: 2652.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR1 TO
##
## Ends in an error in state: 2650.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR2 TO
##
## Ends in an error in state: 2648.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR3 TO
##
## Ends in an error in state: 2646.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR4 TO
##
## Ends in an error in state: 2644.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR5 TO
##
## Ends in an error in state: 2642.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR6 TO
##
## Ends in an error in state: 2640.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR7 TO
##
## Ends in an error in state: 2638.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR8 TO
##
## Ends in an error in state: 2636.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING BINR9 TO
##
## Ends in an error in state: 2634.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL0 TO
##
## Ends in an error in state: 2632.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL1 TO
##
## Ends in an error in state: 2630.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL2 TO
##
## Ends in an error in state: 2628.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL3 TO
##
## Ends in an error in state: 2626.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL4 TO
##
## Ends in an error in state: 2624.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL5 TO
##
## Ends in an error in state: 2622.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL6 TO
##
## Ends in an error in state: 2620.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL7 TO
##
## Ends in an error in state: 2618.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL8 TO
##
## Ends in an error in state: 2616.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONL9 TO
##
## Ends in an error in state: 2614.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR0 TO
##
## Ends in an error in state: 2612.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR1 TO
##
## Ends in an error in state: 2610.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR2 TO
##
## Ends in an error in state: 2608.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR3 TO
##
## Ends in an error in state: 2606.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR4 TO
##
## Ends in an error in state: 2604.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR5 TO
##
## Ends in an error in state: 2602.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR6 TO
##
## Ends in an error in state: 2600.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR7 TO
##
## Ends in an error in state: 2598.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR8 TO
##
## Ends in an error in state: 2596.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING CONR9 TO
##
## Ends in an error in state: 2594.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA STRING EQ TO
##
## Ends in an error in state: 2592.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA BRA TO
##
## Ends in an error in state: 213.
##
## prim -> BRA . revexprlist KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr EQ KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . ALT revcases ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA COMMA TO
##
## Ends in an error in state: 666.
##
## revexprlist -> revexprlist COMMA . expr [ KET COMMA ]
##
## The known suffix of the stack is as follows:
## revexprlist COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL0 TO
##
## Ends in an error in state: 4258.
##
## prim -> BRA CONL0 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL0 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL1 TO
##
## Ends in an error in state: 4254.
##
## prim -> BRA CONL1 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL1 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL2 TO
##
## Ends in an error in state: 4250.
##
## prim -> BRA CONL2 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL2 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL3 TO
##
## Ends in an error in state: 4246.
##
## prim -> BRA CONL3 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL3 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL4 TO
##
## Ends in an error in state: 4242.
##
## prim -> BRA CONL4 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL4 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL5 TO
##
## Ends in an error in state: 4238.
##
## prim -> BRA CONL5 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL5 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL6 TO
##
## Ends in an error in state: 4234.
##
## prim -> BRA CONL6 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL6 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL7 TO
##
## Ends in an error in state: 4230.
##
## prim -> BRA CONL7 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL7 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL8 TO
##
## Ends in an error in state: 4226.
##
## prim -> BRA CONL8 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL8 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONL9 TO
##
## Ends in an error in state: 4222.
##
## prim -> BRA CONL9 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL9 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR0 TO
##
## Ends in an error in state: 4218.
##
## prim -> BRA CONR0 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR0 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR1 TO
##
## Ends in an error in state: 4214.
##
## prim -> BRA CONR1 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR1 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR2 TO
##
## Ends in an error in state: 4210.
##
## prim -> BRA CONR2 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR2 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR3 TO
##
## Ends in an error in state: 4206.
##
## prim -> BRA CONR3 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR3 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR4 TO
##
## Ends in an error in state: 4202.
##
## prim -> BRA CONR4 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR4 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR5 TO
##
## Ends in an error in state: 4198.
##
## prim -> BRA CONR5 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR5 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR6 TO
##
## Ends in an error in state: 4194.
##
## prim -> BRA CONR6 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR6 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR7 TO
##
## Ends in an error in state: 4190.
##
## prim -> BRA CONR7 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR7 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR8 TO
##
## Ends in an error in state: 4186.
##
## prim -> BRA CONR8 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR8 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA CONR9 TO
##
## Ends in an error in state: 4182.
##
## prim -> BRA CONR9 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR9 . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 2336.
##
## prim -> BRA ALT revcases ALT . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 2335.
##
## prim -> BRA ALT revcases . ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA ALT TO
##
## Ends in an error in state: 468.
##
## prim -> BRA ALT . revcases ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL0 TO
##
## Ends in an error in state: 464.
##
## prim -> BRA BINL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL1 TO
##
## Ends in an error in state: 460.
##
## prim -> BRA BINL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL2 TO
##
## Ends in an error in state: 456.
##
## prim -> BRA BINL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL3 TO
##
## Ends in an error in state: 452.
##
## prim -> BRA BINL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL4 TO
##
## Ends in an error in state: 448.
##
## prim -> BRA BINL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL5 TO
##
## Ends in an error in state: 444.
##
## prim -> BRA BINL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL6 TO
##
## Ends in an error in state: 440.
##
## prim -> BRA BINL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL7 TO
##
## Ends in an error in state: 436.
##
## prim -> BRA BINL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL8 TO
##
## Ends in an error in state: 432.
##
## prim -> BRA BINL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINL9 TO
##
## Ends in an error in state: 428.
##
## prim -> BRA BINL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR0 TO
##
## Ends in an error in state: 424.
##
## prim -> BRA BINR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR1 TO
##
## Ends in an error in state: 420.
##
## prim -> BRA BINR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR2 TO
##
## Ends in an error in state: 416.
##
## prim -> BRA BINR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR3 TO
##
## Ends in an error in state: 412.
##
## prim -> BRA BINR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR4 TO
##
## Ends in an error in state: 408.
##
## prim -> BRA BINR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR5 TO
##
## Ends in an error in state: 404.
##
## prim -> BRA BINR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR6 TO
##
## Ends in an error in state: 400.
##
## prim -> BRA BINR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR7 TO
##
## Ends in an error in state: 396.
##
## prim -> BRA BINR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR8 TO
##
## Ends in an error in state: 392.
##
## prim -> BRA BINR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA BINR9 TO
##
## Ends in an error in state: 388.
##
## prim -> BRA BINR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL0 TO
##
## Ends in an error in state: 384.
##
## prim -> BRA CONL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL1 TO
##
## Ends in an error in state: 380.
##
## prim -> BRA CONL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL2 TO
##
## Ends in an error in state: 376.
##
## prim -> BRA CONL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL3 TO
##
## Ends in an error in state: 372.
##
## prim -> BRA CONL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL4 TO
##
## Ends in an error in state: 368.
##
## prim -> BRA CONL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL5 TO
##
## Ends in an error in state: 364.
##
## prim -> BRA CONL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL6 TO
##
## Ends in an error in state: 360.
##
## prim -> BRA CONL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL7 TO
##
## Ends in an error in state: 356.
##
## prim -> BRA CONL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL8 TO
##
## Ends in an error in state: 352.
##
## prim -> BRA CONL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONL9 TO
##
## Ends in an error in state: 348.
##
## prim -> BRA CONL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR0 TO
##
## Ends in an error in state: 344.
##
## prim -> BRA CONR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR1 TO
##
## Ends in an error in state: 340.
##
## prim -> BRA CONR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR2 TO
##
## Ends in an error in state: 336.
##
## prim -> BRA CONR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR3 TO
##
## Ends in an error in state: 332.
##
## prim -> BRA CONR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR4 TO
##
## Ends in an error in state: 328.
##
## prim -> BRA CONR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR5 TO
##
## Ends in an error in state: 324.
##
## prim -> BRA CONR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR6 TO
##
## Ends in an error in state: 320.
##
## prim -> BRA CONR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR7 TO
##
## Ends in an error in state: 316.
##
## prim -> BRA CONR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR8 TO
##
## Ends in an error in state: 312.
##
## prim -> BRA CONR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA CONR9 TO
##
## Ends in an error in state: 308.
##
## prim -> BRA CONR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA EQ TO
##
## Ends in an error in state: 217.
##
## prim -> BRA EQ . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA EQ . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL0 TO
##
## Ends in an error in state: 2421.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL1 TO
##
## Ends in an error in state: 2419.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL2 TO
##
## Ends in an error in state: 2417.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL3 TO
##
## Ends in an error in state: 2415.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL4 TO
##
## Ends in an error in state: 2413.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL5 TO
##
## Ends in an error in state: 2411.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL6 TO
##
## Ends in an error in state: 2409.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL7 TO
##
## Ends in an error in state: 2407.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL8 TO
##
## Ends in an error in state: 2405.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINL9 TO
##
## Ends in an error in state: 2403.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR0 TO
##
## Ends in an error in state: 2401.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR1 TO
##
## Ends in an error in state: 2399.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR2 TO
##
## Ends in an error in state: 2397.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR3 TO
##
## Ends in an error in state: 2395.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR4 TO
##
## Ends in an error in state: 2393.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR5 TO
##
## Ends in an error in state: 2391.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR6 TO
##
## Ends in an error in state: 2389.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR7 TO
##
## Ends in an error in state: 2387.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR8 TO
##
## Ends in an error in state: 2385.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING BINR9 TO
##
## Ends in an error in state: 2383.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL0 TO
##
## Ends in an error in state: 2381.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL1 TO
##
## Ends in an error in state: 2379.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL2 TO
##
## Ends in an error in state: 2377.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL3 TO
##
## Ends in an error in state: 2375.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL4 TO
##
## Ends in an error in state: 2373.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL5 TO
##
## Ends in an error in state: 2371.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL6 TO
##
## Ends in an error in state: 2369.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL7 TO
##
## Ends in an error in state: 2367.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL8 TO
##
## Ends in an error in state: 2365.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONL9 TO
##
## Ends in an error in state: 2363.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR0 TO
##
## Ends in an error in state: 2361.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR1 TO
##
## Ends in an error in state: 2359.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR2 TO
##
## Ends in an error in state: 2357.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR3 TO
##
## Ends in an error in state: 2355.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR4 TO
##
## Ends in an error in state: 2353.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR5 TO
##
## Ends in an error in state: 2351.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR6 TO
##
## Ends in an error in state: 2349.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR7 TO
##
## Ends in an error in state: 2347.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR8 TO
##
## Ends in an error in state: 2345.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING CONR9 TO
##
## Ends in an error in state: 2343.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA STRING EQ TO
##
## Ends in an error in state: 2341.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ BRA TO
##
## Ends in an error in state: 216.
##
## prim -> BRA . revexprlist KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr EQ KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . ALT revcases ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ FUN ALT TO
##
## Ends in an error in state: 127.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3403.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ FUN TO
##
## Ends in an error in state: 126.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL0 TO
##
## Ends in an error in state: 306.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL1 TO
##
## Ends in an error in state: 298.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL2 TO
##
## Ends in an error in state: 290.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL3 TO
##
## Ends in an error in state: 282.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL4 TO
##
## Ends in an error in state: 274.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL5 TO
##
## Ends in an error in state: 266.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL6 TO
##
## Ends in an error in state: 258.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL7 TO
##
## Ends in an error in state: 250.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL8 TO
##
## Ends in an error in state: 242.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINL9 TO
##
## Ends in an error in state: 234.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR0 TO
##
## Ends in an error in state: 304.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR1 TO
##
## Ends in an error in state: 296.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR2 TO
##
## Ends in an error in state: 288.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR3 TO
##
## Ends in an error in state: 280.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR4 TO
##
## Ends in an error in state: 272.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR5 TO
##
## Ends in an error in state: 264.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR6 TO
##
## Ends in an error in state: 256.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR7 TO
##
## Ends in an error in state: 248.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR8 TO
##
## Ends in an error in state: 240.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING BINR9 TO
##
## Ends in an error in state: 232.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL0 TO
##
## Ends in an error in state: 302.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL1 TO
##
## Ends in an error in state: 294.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL2 TO
##
## Ends in an error in state: 286.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL3 TO
##
## Ends in an error in state: 278.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL4 TO
##
## Ends in an error in state: 270.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL5 TO
##
## Ends in an error in state: 262.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL6 TO
##
## Ends in an error in state: 254.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL7 TO
##
## Ends in an error in state: 246.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL8 TO
##
## Ends in an error in state: 238.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONL9 TO
##
## Ends in an error in state: 228.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR0 TO
##
## Ends in an error in state: 300.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR1 TO
##
## Ends in an error in state: 292.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR2 TO
##
## Ends in an error in state: 284.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR3 TO
##
## Ends in an error in state: 276.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR4 TO
##
## Ends in an error in state: 268.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR5 TO
##
## Ends in an error in state: 260.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR6 TO
##
## Ends in an error in state: 252.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR7 TO
##
## Ends in an error in state: 244.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR8 TO
##
## Ends in an error in state: 236.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING CONR9 TO
##
## Ends in an error in state: 226.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING EQ TO
##
## Ends in an error in state: 224.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ STRING TO
##
## Ends in an error in state: 230.
##
## app -> app . prim [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## term -> app . [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA EQ TO
##
## Ends in an error in state: 4178.
##
## prim -> BRA EQ . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA EQ . expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA FUN ALT TO
##
## Ends in an error in state: 114.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3658.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA FUN TO
##
## Ends in an error in state: 112.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL0 TO
##
## Ends in an error in state: 4429.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL1 TO
##
## Ends in an error in state: 4427.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL2 TO
##
## Ends in an error in state: 4425.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL3 TO
##
## Ends in an error in state: 4423.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL4 TO
##
## Ends in an error in state: 4421.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL5 TO
##
## Ends in an error in state: 4419.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL6 TO
##
## Ends in an error in state: 4417.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL7 TO
##
## Ends in an error in state: 4415.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL8 TO
##
## Ends in an error in state: 4413.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINL9 TO
##
## Ends in an error in state: 4411.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR0 TO
##
## Ends in an error in state: 4409.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR1 TO
##
## Ends in an error in state: 4407.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR2 TO
##
## Ends in an error in state: 4405.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR3 TO
##
## Ends in an error in state: 4403.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR4 TO
##
## Ends in an error in state: 4401.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR5 TO
##
## Ends in an error in state: 4399.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR6 TO
##
## Ends in an error in state: 4397.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR7 TO
##
## Ends in an error in state: 4395.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR8 TO
##
## Ends in an error in state: 4393.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING BINR9 TO
##
## Ends in an error in state: 4391.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL0 TO
##
## Ends in an error in state: 4389.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL1 TO
##
## Ends in an error in state: 4387.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL2 TO
##
## Ends in an error in state: 4385.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL3 TO
##
## Ends in an error in state: 4383.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL4 TO
##
## Ends in an error in state: 4381.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL5 TO
##
## Ends in an error in state: 4379.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL6 TO
##
## Ends in an error in state: 4377.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL7 TO
##
## Ends in an error in state: 4375.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL8 TO
##
## Ends in an error in state: 4373.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONL9 TO
##
## Ends in an error in state: 4371.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR0 TO
##
## Ends in an error in state: 4369.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR1 TO
##
## Ends in an error in state: 4367.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR2 TO
##
## Ends in an error in state: 4365.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR3 TO
##
## Ends in an error in state: 4363.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR4 TO
##
## Ends in an error in state: 4361.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR5 TO
##
## Ends in an error in state: 4359.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR6 TO
##
## Ends in an error in state: 4357.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR7 TO
##
## Ends in an error in state: 4355.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR8 TO
##
## Ends in an error in state: 4353.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING CONR9 TO
##
## Ends in an error in state: 4351.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING EQ TO
##
## Ends in an error in state: 4349.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA STRING TO
##
## Ends in an error in state: 676.
##
## app -> app . prim [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## term -> app . [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: BRA TO
##
## Ends in an error in state: 4177.
##
## prim -> BRA . revexprlist KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ expr KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL0 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL1 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL2 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL3 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL4 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL5 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL6 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL7 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL8 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL9 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR0 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR1 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR2 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR3 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR4 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR5 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR6 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR7 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR8 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR9 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL0 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL1 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL2 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL3 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL4 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL5 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL6 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL7 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL8 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL9 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR0 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR1 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR2 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR3 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR4 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR5 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR6 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR7 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR8 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR9 KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr EQ KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . ALT revcases ALT KET [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN ALT TO
##
## Ends in an error in state: 4174.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 3569.
##
## prim -> BRA ALT revcases ALT . KET [ TO STRING NUM ID FUN BRA ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3568.
##
## prim -> BRA ALT revcases . ALT KET [ TO STRING NUM ID FUN BRA ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA ALT TO
##
## Ends in an error in state: 3567.
##
## prim -> BRA ALT . revcases ALT KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL0 TO
##
## Ends in an error in state: 3563.
##
## prim -> BRA BINL0 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL0 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL1 TO
##
## Ends in an error in state: 3559.
##
## prim -> BRA BINL1 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL1 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL2 TO
##
## Ends in an error in state: 3555.
##
## prim -> BRA BINL2 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL2 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL3 TO
##
## Ends in an error in state: 3551.
##
## prim -> BRA BINL3 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL3 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL4 TO
##
## Ends in an error in state: 3547.
##
## prim -> BRA BINL4 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL4 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL5 TO
##
## Ends in an error in state: 3543.
##
## prim -> BRA BINL5 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL5 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL6 TO
##
## Ends in an error in state: 3539.
##
## prim -> BRA BINL6 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL6 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL7 TO
##
## Ends in an error in state: 3535.
##
## prim -> BRA BINL7 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL7 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL8 TO
##
## Ends in an error in state: 3531.
##
## prim -> BRA BINL8 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL8 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINL9 TO
##
## Ends in an error in state: 3527.
##
## prim -> BRA BINL9 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINL9 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR0 TO
##
## Ends in an error in state: 3523.
##
## prim -> BRA BINR0 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR0 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR1 TO
##
## Ends in an error in state: 3519.
##
## prim -> BRA BINR1 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR1 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR2 TO
##
## Ends in an error in state: 3515.
##
## prim -> BRA BINR2 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR2 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR3 TO
##
## Ends in an error in state: 3511.
##
## prim -> BRA BINR3 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR3 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR4 TO
##
## Ends in an error in state: 3507.
##
## prim -> BRA BINR4 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR4 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR5 TO
##
## Ends in an error in state: 3503.
##
## prim -> BRA BINR5 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR5 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR6 TO
##
## Ends in an error in state: 3499.
##
## prim -> BRA BINR6 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR6 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR7 TO
##
## Ends in an error in state: 3495.
##
## prim -> BRA BINR7 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR7 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR8 TO
##
## Ends in an error in state: 3491.
##
## prim -> BRA BINR8 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR8 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA BINR9 TO
##
## Ends in an error in state: 3487.
##
## prim -> BRA BINR9 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA BINR9 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL0 TO
##
## Ends in an error in state: 3483.
##
## prim -> BRA CONL0 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL0 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL1 TO
##
## Ends in an error in state: 3479.
##
## prim -> BRA CONL1 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL1 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL2 TO
##
## Ends in an error in state: 3475.
##
## prim -> BRA CONL2 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL2 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL3 TO
##
## Ends in an error in state: 3471.
##
## prim -> BRA CONL3 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL3 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL4 TO
##
## Ends in an error in state: 3467.
##
## prim -> BRA CONL4 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL4 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL5 TO
##
## Ends in an error in state: 3463.
##
## prim -> BRA CONL5 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL5 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL6 TO
##
## Ends in an error in state: 3459.
##
## prim -> BRA CONL6 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL6 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL7 TO
##
## Ends in an error in state: 3455.
##
## prim -> BRA CONL7 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL7 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL8 TO
##
## Ends in an error in state: 3451.
##
## prim -> BRA CONL8 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL8 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONL9 TO
##
## Ends in an error in state: 3447.
##
## prim -> BRA CONL9 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONL9 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR0 TO
##
## Ends in an error in state: 3443.
##
## prim -> BRA CONR0 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR0 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR1 TO
##
## Ends in an error in state: 3439.
##
## prim -> BRA CONR1 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR1 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR2 TO
##
## Ends in an error in state: 3435.
##
## prim -> BRA CONR2 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR2 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR3 TO
##
## Ends in an error in state: 3431.
##
## prim -> BRA CONR3 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR3 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR4 TO
##
## Ends in an error in state: 3427.
##
## prim -> BRA CONR4 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR4 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR5 TO
##
## Ends in an error in state: 3423.
##
## prim -> BRA CONR5 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR5 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR6 TO
##
## Ends in an error in state: 3419.
##
## prim -> BRA CONR6 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR6 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR7 TO
##
## Ends in an error in state: 3415.
##
## prim -> BRA CONR7 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR7 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR8 TO
##
## Ends in an error in state: 3411.
##
## prim -> BRA CONR8 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR8 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA CONR9 TO
##
## Ends in an error in state: 3407.
##
## prim -> BRA CONR9 . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA CONR9 . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA EQ TO
##
## Ends in an error in state: 121.
##
## prim -> BRA EQ . KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA EQ . expr KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL0 TO
##
## Ends in an error in state: 3654.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL1 TO
##
## Ends in an error in state: 3652.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL2 TO
##
## Ends in an error in state: 3650.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL3 TO
##
## Ends in an error in state: 3648.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL4 TO
##
## Ends in an error in state: 3646.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL5 TO
##
## Ends in an error in state: 3644.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL6 TO
##
## Ends in an error in state: 3642.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL7 TO
##
## Ends in an error in state: 3640.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL8 TO
##
## Ends in an error in state: 3638.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINL9 TO
##
## Ends in an error in state: 3636.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR0 TO
##
## Ends in an error in state: 3634.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR1 TO
##
## Ends in an error in state: 3632.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR2 TO
##
## Ends in an error in state: 3630.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR3 TO
##
## Ends in an error in state: 3628.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR4 TO
##
## Ends in an error in state: 3626.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR5 TO
##
## Ends in an error in state: 3624.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR6 TO
##
## Ends in an error in state: 3622.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR7 TO
##
## Ends in an error in state: 3620.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR8 TO
##
## Ends in an error in state: 3618.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING BINR9 TO
##
## Ends in an error in state: 3616.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL0 TO
##
## Ends in an error in state: 3614.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL1 TO
##
## Ends in an error in state: 3612.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL2 TO
##
## Ends in an error in state: 3610.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL3 TO
##
## Ends in an error in state: 3608.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL4 TO
##
## Ends in an error in state: 3606.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL5 TO
##
## Ends in an error in state: 3604.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL6 TO
##
## Ends in an error in state: 3602.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL7 TO
##
## Ends in an error in state: 3600.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL8 TO
##
## Ends in an error in state: 3598.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONL9 TO
##
## Ends in an error in state: 3596.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR0 TO
##
## Ends in an error in state: 3594.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR1 TO
##
## Ends in an error in state: 3592.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR2 TO
##
## Ends in an error in state: 3590.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR3 TO
##
## Ends in an error in state: 3588.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR4 TO
##
## Ends in an error in state: 3586.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR5 TO
##
## Ends in an error in state: 3584.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR6 TO
##
## Ends in an error in state: 3582.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR7 TO
##
## Ends in an error in state: 3580.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR8 TO
##
## Ends in an error in state: 3578.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING CONR9 TO
##
## Ends in an error in state: 3576.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA STRING EQ TO
##
## Ends in an error in state: 3574.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN BRA TO
##
## Ends in an error in state: 120.
##
## prim -> BRA . revexprlist KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL0 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL1 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL2 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL3 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL4 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL5 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL6 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL7 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL8 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL9 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR0 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR1 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR2 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR3 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR4 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR5 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR6 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR7 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR8 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR9 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL0 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL1 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL2 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL3 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL4 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL5 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL6 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL7 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL8 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL9 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR0 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR1 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR2 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR3 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR4 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR5 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR6 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR7 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR8 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR9 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . EQ KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL0 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL1 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL2 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL3 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL4 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL5 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL6 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL7 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL8 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINL9 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR0 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR1 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR2 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR3 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR4 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR5 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR6 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR7 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR8 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . BINR9 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL0 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL1 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL2 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL3 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL4 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL5 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL6 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL7 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL8 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONL9 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR0 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR1 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR2 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR3 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR4 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR5 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR6 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR7 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR8 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . CONR9 expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . EQ expr KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL0 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL1 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL2 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL3 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL4 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL5 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL6 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL7 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL8 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINL9 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR0 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR1 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR2 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR3 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR4 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR5 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR6 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR7 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR8 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr BINR9 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL0 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL1 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL2 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL3 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL4 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL5 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL6 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL7 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL8 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONL9 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR0 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR1 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR2 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR3 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR4 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR5 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR6 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR7 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR8 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr CONR9 KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . expr EQ KET [ TO STRING NUM ID FUN BRA ]
## prim -> BRA . ALT revcases ALT KET [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN FUN ALT TO
##
## Ends in an error in state: 119.
##
## prim -> FUN option(eoc) . revcases NUF [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3656.
##
## prim -> FUN option(eoc) revcases . NUF [ TO STRING NUM ID FUN BRA ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN FUN TO
##
## Ends in an error in state: 118.
##
## prim -> FUN . option(eoc) revcases NUF [ TO STRING NUM ID FUN BRA ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING THEN
##
## Ends in an error in state: 489.
##
## app -> app . prim [ TO STRING NUM ID FUN BRA ]
## term -> app . [ TO ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 3224.
##
## prim -> BRA ALT revcases ALT . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3223.
##
## prim -> BRA ALT revcases . ALT KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA ALT TO
##
## Ends in an error in state: 3222.
##
## prim -> BRA ALT . revcases ALT KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL0 TO
##
## Ends in an error in state: 3218.
##
## prim -> BRA BINL0 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL0 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL1 TO
##
## Ends in an error in state: 3214.
##
## prim -> BRA BINL1 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL1 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL2 TO
##
## Ends in an error in state: 3210.
##
## prim -> BRA BINL2 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL2 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL3 TO
##
## Ends in an error in state: 3206.
##
## prim -> BRA BINL3 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL3 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL4 TO
##
## Ends in an error in state: 3202.
##
## prim -> BRA BINL4 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL4 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL5 TO
##
## Ends in an error in state: 3198.
##
## prim -> BRA BINL5 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL5 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL6 TO
##
## Ends in an error in state: 3194.
##
## prim -> BRA BINL6 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL6 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL7 TO
##
## Ends in an error in state: 3190.
##
## prim -> BRA BINL7 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL7 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL8 TO
##
## Ends in an error in state: 3186.
##
## prim -> BRA BINL8 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL8 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINL9 TO
##
## Ends in an error in state: 3182.
##
## prim -> BRA BINL9 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL9 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR0 TO
##
## Ends in an error in state: 3178.
##
## prim -> BRA BINR0 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR0 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR1 TO
##
## Ends in an error in state: 3174.
##
## prim -> BRA BINR1 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR1 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR2 TO
##
## Ends in an error in state: 3170.
##
## prim -> BRA BINR2 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR2 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR3 TO
##
## Ends in an error in state: 3166.
##
## prim -> BRA BINR3 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR3 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR4 TO
##
## Ends in an error in state: 3162.
##
## prim -> BRA BINR4 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR4 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR5 TO
##
## Ends in an error in state: 3158.
##
## prim -> BRA BINR5 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR5 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR6 TO
##
## Ends in an error in state: 3154.
##
## prim -> BRA BINR6 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR6 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR7 TO
##
## Ends in an error in state: 3150.
##
## prim -> BRA BINR7 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR7 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR8 TO
##
## Ends in an error in state: 3146.
##
## prim -> BRA BINR8 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR8 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA BINR9 TO
##
## Ends in an error in state: 3142.
##
## prim -> BRA BINR9 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR9 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL0 TO
##
## Ends in an error in state: 3138.
##
## prim -> BRA CONL0 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL0 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL1 TO
##
## Ends in an error in state: 3134.
##
## prim -> BRA CONL1 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL1 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL2 TO
##
## Ends in an error in state: 3130.
##
## prim -> BRA CONL2 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL2 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL3 TO
##
## Ends in an error in state: 3126.
##
## prim -> BRA CONL3 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL3 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL4 TO
##
## Ends in an error in state: 3122.
##
## prim -> BRA CONL4 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL4 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL5 TO
##
## Ends in an error in state: 3118.
##
## prim -> BRA CONL5 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL5 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL6 TO
##
## Ends in an error in state: 3114.
##
## prim -> BRA CONL6 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL6 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL7 TO
##
## Ends in an error in state: 3110.
##
## prim -> BRA CONL7 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL7 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL8 TO
##
## Ends in an error in state: 3106.
##
## prim -> BRA CONL8 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL8 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONL9 TO
##
## Ends in an error in state: 3102.
##
## prim -> BRA CONL9 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL9 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR0 TO
##
## Ends in an error in state: 3098.
##
## prim -> BRA CONR0 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR0 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR1 TO
##
## Ends in an error in state: 3094.
##
## prim -> BRA CONR1 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR1 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR2 TO
##
## Ends in an error in state: 3090.
##
## prim -> BRA CONR2 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR2 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR3 TO
##
## Ends in an error in state: 3086.
##
## prim -> BRA CONR3 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR3 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR4 TO
##
## Ends in an error in state: 3082.
##
## prim -> BRA CONR4 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR4 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR5 TO
##
## Ends in an error in state: 3078.
##
## prim -> BRA CONR5 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR5 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR6 TO
##
## Ends in an error in state: 3074.
##
## prim -> BRA CONR6 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR6 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR7 TO
##
## Ends in an error in state: 3070.
##
## prim -> BRA CONR7 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR7 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR8 TO
##
## Ends in an error in state: 3066.
##
## prim -> BRA CONR8 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR8 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA CONR9 TO
##
## Ends in an error in state: 3062.
##
## prim -> BRA CONR9 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR9 . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA EQ TO
##
## Ends in an error in state: 3058.
##
## prim -> BRA EQ . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA EQ . expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL0 TO
##
## Ends in an error in state: 3309.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL1 TO
##
## Ends in an error in state: 3307.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL2 TO
##
## Ends in an error in state: 3305.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL3 TO
##
## Ends in an error in state: 3303.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL4 TO
##
## Ends in an error in state: 3301.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL5 TO
##
## Ends in an error in state: 3299.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL6 TO
##
## Ends in an error in state: 3297.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL7 TO
##
## Ends in an error in state: 3295.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL8 TO
##
## Ends in an error in state: 3293.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINL9 TO
##
## Ends in an error in state: 3291.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR0 TO
##
## Ends in an error in state: 3289.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR1 TO
##
## Ends in an error in state: 3287.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR2 TO
##
## Ends in an error in state: 3285.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR3 TO
##
## Ends in an error in state: 3283.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR4 TO
##
## Ends in an error in state: 3281.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR5 TO
##
## Ends in an error in state: 3279.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR6 TO
##
## Ends in an error in state: 3277.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR7 TO
##
## Ends in an error in state: 3275.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR8 TO
##
## Ends in an error in state: 3273.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING BINR9 TO
##
## Ends in an error in state: 3271.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL0 TO
##
## Ends in an error in state: 3269.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL1 TO
##
## Ends in an error in state: 3267.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL2 TO
##
## Ends in an error in state: 3265.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL3 TO
##
## Ends in an error in state: 3263.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL4 TO
##
## Ends in an error in state: 3261.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL5 TO
##
## Ends in an error in state: 3259.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL6 TO
##
## Ends in an error in state: 3257.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL7 TO
##
## Ends in an error in state: 3255.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL8 TO
##
## Ends in an error in state: 3253.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONL9 TO
##
## Ends in an error in state: 3251.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR0 TO
##
## Ends in an error in state: 3249.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR1 TO
##
## Ends in an error in state: 3247.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR2 TO
##
## Ends in an error in state: 3245.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR3 TO
##
## Ends in an error in state: 3243.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR4 TO
##
## Ends in an error in state: 3241.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR5 TO
##
## Ends in an error in state: 3239.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR6 TO
##
## Ends in an error in state: 3237.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR7 TO
##
## Ends in an error in state: 3235.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR8 TO
##
## Ends in an error in state: 3233.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING CONR9 TO
##
## Ends in an error in state: 3231.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA STRING EQ TO
##
## Ends in an error in state: 3229.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO BRA TO
##
## Ends in an error in state: 3057.
##
## prim -> BRA . revexprlist KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL0 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL1 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL2 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL3 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL4 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL5 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL6 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL7 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL8 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL9 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR0 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR1 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR2 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR3 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR4 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR5 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR6 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR7 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR8 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR9 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL0 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL1 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL2 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL3 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL4 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL5 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL6 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL7 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL8 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL9 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR0 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR1 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR2 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR3 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR4 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR5 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR6 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR7 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR8 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR9 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . EQ KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL0 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL1 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL2 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL3 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL4 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL5 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL6 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL7 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL8 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL9 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR0 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR1 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR2 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR3 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR4 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR5 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR6 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR7 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR8 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR9 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL0 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL1 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL2 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL3 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL4 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL5 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL6 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL7 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL8 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL9 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR0 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR1 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR2 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR3 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR4 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR5 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR6 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR7 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR8 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR9 expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . EQ expr KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL0 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL1 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL2 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL3 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL4 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL5 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL6 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL7 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL8 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL9 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR0 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR1 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR2 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR3 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR4 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR5 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR6 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR7 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR8 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR9 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL0 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL1 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL2 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL3 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL4 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL5 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL6 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL7 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL8 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL9 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR0 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR1 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR2 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR3 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR4 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR5 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR6 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR7 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR8 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR9 KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr EQ KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . ALT revcases ALT KET [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO FUN ALT TO
##
## Ends in an error in state: 3054.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3055.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO FUN TO
##
## Ends in an error in state: 3053.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO ID ALT TO
##
## Ends in an error in state: 485.
##
## revcases -> revcases ALT . case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO IF STRING THEN STRING ELSE TO
##
## Ends in an error in state: 3051.
##
## topexpr -> IF expr THEN expr ELSE . topexpr [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## IF expr THEN expr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO IF STRING THEN TO
##
## Ends in an error in state: 3049.
##
## topexpr -> IF expr THEN . expr ELSE topexpr [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## IF expr THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO IF TO
##
## Ends in an error in state: 3047.
##
## topexpr -> IF . expr THEN expr ELSE topexpr [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 4175.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO LAM BRA STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3043.
##
## revcases -> revcases . ALT case [ KET ALT ]
## topexpr -> LAM BRA revcases . KET [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## LAM BRA revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO LAM BRA TO
##
## Ends in an error in state: 3042.
##
## nonempty_list(simplex) -> BRA . revexprlist KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET [ TO ]
## nonempty_list(simplex) -> BRA . revexprlist KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET nonempty_list(simplex) [ TO ]
## topexpr -> LAM BRA . revcases KET [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## LAM BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO LAM STRING TO TO
##
## Ends in an error in state: 3046.
##
## topexpr -> LAM nonempty_list(simplex) TO . topexpr [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## LAM nonempty_list(simplex) TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO LAM TO
##
## Ends in an error in state: 3041.
##
## topexpr -> LAM . nonempty_list(simplex) TO topexpr [ NUF ALT ]
## topexpr -> LAM . BRA revcases KET [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## LAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO LET ID EQ ID IN TO
##
## Ends in an error in state: 3040.
##
## topexpr -> LET revdefs IN . topexpr [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## LET revdefs IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO LET ID EQ LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 133.
##
## revdefs -> revdefs . SEMI def [ SEMI IN ]
## topexpr -> LET revdefs . IN topexpr [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## LET revdefs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO LET TO
##
## Ends in an error in state: 132.
##
## topexpr -> LET . revdefs IN topexpr [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL0 TO
##
## Ends in an error in state: 3398.
##
## expr -> expr BINL0 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL1 TO
##
## Ends in an error in state: 3390.
##
## expr -> expr BINL1 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL2 TO
##
## Ends in an error in state: 3382.
##
## expr -> expr BINL2 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL3 TO
##
## Ends in an error in state: 3374.
##
## expr -> expr BINL3 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL4 TO
##
## Ends in an error in state: 3366.
##
## expr -> expr BINL4 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL5 TO
##
## Ends in an error in state: 3358.
##
## expr -> expr BINL5 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL6 TO
##
## Ends in an error in state: 3350.
##
## expr -> expr BINL6 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL7 TO
##
## Ends in an error in state: 3342.
##
## expr -> expr BINL7 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL8 TO
##
## Ends in an error in state: 3334.
##
## expr -> expr BINL8 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINL9 TO
##
## Ends in an error in state: 3326.
##
## expr -> expr BINL9 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR0 TO
##
## Ends in an error in state: 3396.
##
## expr -> expr BINR0 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR1 TO
##
## Ends in an error in state: 3388.
##
## expr -> expr BINR1 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR2 TO
##
## Ends in an error in state: 3380.
##
## expr -> expr BINR2 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR3 TO
##
## Ends in an error in state: 3372.
##
## expr -> expr BINR3 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR4 TO
##
## Ends in an error in state: 3364.
##
## expr -> expr BINR4 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR5 TO
##
## Ends in an error in state: 3356.
##
## expr -> expr BINR5 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR6 TO
##
## Ends in an error in state: 3348.
##
## expr -> expr BINR6 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR7 TO
##
## Ends in an error in state: 3340.
##
## expr -> expr BINR7 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR8 TO
##
## Ends in an error in state: 3332.
##
## expr -> expr BINR8 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING BINR9 TO
##
## Ends in an error in state: 3324.
##
## expr -> expr BINR9 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL0 TO
##
## Ends in an error in state: 3394.
##
## expr -> expr CONL0 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL1 TO
##
## Ends in an error in state: 3386.
##
## expr -> expr CONL1 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL2 TO
##
## Ends in an error in state: 3378.
##
## expr -> expr CONL2 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL3 TO
##
## Ends in an error in state: 3370.
##
## expr -> expr CONL3 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL4 TO
##
## Ends in an error in state: 3362.
##
## expr -> expr CONL4 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL5 TO
##
## Ends in an error in state: 3354.
##
## expr -> expr CONL5 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL6 TO
##
## Ends in an error in state: 3346.
##
## expr -> expr CONL6 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL7 TO
##
## Ends in an error in state: 3338.
##
## expr -> expr CONL7 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL8 TO
##
## Ends in an error in state: 3330.
##
## expr -> expr CONL8 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONL9 TO
##
## Ends in an error in state: 3320.
##
## expr -> expr CONL9 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR0 TO
##
## Ends in an error in state: 3392.
##
## expr -> expr CONR0 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR1 TO
##
## Ends in an error in state: 3384.
##
## expr -> expr CONR1 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR2 TO
##
## Ends in an error in state: 3376.
##
## expr -> expr CONR2 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR3 TO
##
## Ends in an error in state: 3368.
##
## expr -> expr CONR3 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR4 TO
##
## Ends in an error in state: 3360.
##
## expr -> expr CONR4 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR5 TO
##
## Ends in an error in state: 3352.
##
## expr -> expr CONR5 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR6 TO
##
## Ends in an error in state: 3344.
##
## expr -> expr CONR6 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR7 TO
##
## Ends in an error in state: 3336.
##
## expr -> expr CONR7 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR8 TO
##
## Ends in an error in state: 3328.
##
## expr -> expr CONR8 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING CONR9 TO
##
## Ends in an error in state: 3318.
##
## expr -> expr CONR9 . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING EQ TO
##
## Ends in an error in state: 3316.
##
## expr -> expr EQ . expr [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO STRING TO
##
## Ends in an error in state: 3322.
##
## app -> app . prim [ STRING NUM NUF ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## term -> app . [ NUF EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN STRING TO TO
##
## Ends in an error in state: 129.
##
## case -> term TO . topexpr [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## term TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: FUN TO
##
## Ends in an error in state: 4173.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 1097.
##
## prim -> BRA ALT revcases ALT . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 1096.
##
## prim -> BRA ALT revcases . ALT KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA ALT TO
##
## Ends in an error in state: 1095.
##
## prim -> BRA ALT . revcases ALT KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL0 TO
##
## Ends in an error in state: 1091.
##
## prim -> BRA BINL0 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL0 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL1 TO
##
## Ends in an error in state: 1087.
##
## prim -> BRA BINL1 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL1 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL2 TO
##
## Ends in an error in state: 1083.
##
## prim -> BRA BINL2 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL2 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL3 TO
##
## Ends in an error in state: 1079.
##
## prim -> BRA BINL3 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL3 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL4 TO
##
## Ends in an error in state: 1075.
##
## prim -> BRA BINL4 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL4 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL5 TO
##
## Ends in an error in state: 1071.
##
## prim -> BRA BINL5 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL5 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL6 TO
##
## Ends in an error in state: 1067.
##
## prim -> BRA BINL6 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL6 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL7 TO
##
## Ends in an error in state: 1063.
##
## prim -> BRA BINL7 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL7 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL8 TO
##
## Ends in an error in state: 1059.
##
## prim -> BRA BINL8 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL8 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINL9 TO
##
## Ends in an error in state: 1055.
##
## prim -> BRA BINL9 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL9 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR0 TO
##
## Ends in an error in state: 1051.
##
## prim -> BRA BINR0 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR0 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR1 TO
##
## Ends in an error in state: 1047.
##
## prim -> BRA BINR1 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR1 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR2 TO
##
## Ends in an error in state: 1043.
##
## prim -> BRA BINR2 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR2 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR3 TO
##
## Ends in an error in state: 1039.
##
## prim -> BRA BINR3 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR3 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR4 TO
##
## Ends in an error in state: 1035.
##
## prim -> BRA BINR4 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR4 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR5 TO
##
## Ends in an error in state: 1031.
##
## prim -> BRA BINR5 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR5 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR6 TO
##
## Ends in an error in state: 1027.
##
## prim -> BRA BINR6 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR6 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR7 TO
##
## Ends in an error in state: 1023.
##
## prim -> BRA BINR7 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR7 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR8 TO
##
## Ends in an error in state: 1019.
##
## prim -> BRA BINR8 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR8 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA BINR9 TO
##
## Ends in an error in state: 1015.
##
## prim -> BRA BINR9 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR9 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL0 TO
##
## Ends in an error in state: 1011.
##
## prim -> BRA CONL0 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL0 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL1 TO
##
## Ends in an error in state: 1007.
##
## prim -> BRA CONL1 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL1 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL2 TO
##
## Ends in an error in state: 1003.
##
## prim -> BRA CONL2 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL2 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL3 TO
##
## Ends in an error in state: 999.
##
## prim -> BRA CONL3 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL3 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL4 TO
##
## Ends in an error in state: 995.
##
## prim -> BRA CONL4 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL4 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL5 TO
##
## Ends in an error in state: 991.
##
## prim -> BRA CONL5 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL5 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL6 TO
##
## Ends in an error in state: 987.
##
## prim -> BRA CONL6 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL6 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL7 TO
##
## Ends in an error in state: 983.
##
## prim -> BRA CONL7 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL7 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL8 TO
##
## Ends in an error in state: 979.
##
## prim -> BRA CONL8 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL8 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONL9 TO
##
## Ends in an error in state: 975.
##
## prim -> BRA CONL9 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL9 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR0 TO
##
## Ends in an error in state: 971.
##
## prim -> BRA CONR0 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR0 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR1 TO
##
## Ends in an error in state: 967.
##
## prim -> BRA CONR1 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR1 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR2 TO
##
## Ends in an error in state: 963.
##
## prim -> BRA CONR2 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR2 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR3 TO
##
## Ends in an error in state: 959.
##
## prim -> BRA CONR3 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR3 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR4 TO
##
## Ends in an error in state: 955.
##
## prim -> BRA CONR4 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR4 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR5 TO
##
## Ends in an error in state: 951.
##
## prim -> BRA CONR5 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR5 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR6 TO
##
## Ends in an error in state: 947.
##
## prim -> BRA CONR6 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR6 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR7 TO
##
## Ends in an error in state: 943.
##
## prim -> BRA CONR7 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR7 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR8 TO
##
## Ends in an error in state: 939.
##
## prim -> BRA CONR8 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR8 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA CONR9 TO
##
## Ends in an error in state: 935.
##
## prim -> BRA CONR9 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR9 . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA EQ TO
##
## Ends in an error in state: 931.
##
## prim -> BRA EQ . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA EQ . expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL0 TO
##
## Ends in an error in state: 1182.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL1 TO
##
## Ends in an error in state: 1180.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL2 TO
##
## Ends in an error in state: 1178.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL3 TO
##
## Ends in an error in state: 1176.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL4 TO
##
## Ends in an error in state: 1174.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL5 TO
##
## Ends in an error in state: 1172.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL6 TO
##
## Ends in an error in state: 1170.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL7 TO
##
## Ends in an error in state: 1168.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL8 TO
##
## Ends in an error in state: 1166.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINL9 TO
##
## Ends in an error in state: 1164.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR0 TO
##
## Ends in an error in state: 1162.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR1 TO
##
## Ends in an error in state: 1160.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR2 TO
##
## Ends in an error in state: 1158.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR3 TO
##
## Ends in an error in state: 1156.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR4 TO
##
## Ends in an error in state: 1154.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR5 TO
##
## Ends in an error in state: 1152.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR6 TO
##
## Ends in an error in state: 1150.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR7 TO
##
## Ends in an error in state: 1148.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR8 TO
##
## Ends in an error in state: 1146.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING BINR9 TO
##
## Ends in an error in state: 1144.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL0 TO
##
## Ends in an error in state: 1142.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL1 TO
##
## Ends in an error in state: 1140.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL2 TO
##
## Ends in an error in state: 1138.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL3 TO
##
## Ends in an error in state: 1136.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL4 TO
##
## Ends in an error in state: 1134.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL5 TO
##
## Ends in an error in state: 1132.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL6 TO
##
## Ends in an error in state: 1130.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL7 TO
##
## Ends in an error in state: 1128.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL8 TO
##
## Ends in an error in state: 1126.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONL9 TO
##
## Ends in an error in state: 1124.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR0 TO
##
## Ends in an error in state: 1122.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR1 TO
##
## Ends in an error in state: 1120.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR2 TO
##
## Ends in an error in state: 1118.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR3 TO
##
## Ends in an error in state: 1116.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR4 TO
##
## Ends in an error in state: 1114.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR5 TO
##
## Ends in an error in state: 1112.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR6 TO
##
## Ends in an error in state: 1110.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR7 TO
##
## Ends in an error in state: 1108.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR8 TO
##
## Ends in an error in state: 1106.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING CONR9 TO
##
## Ends in an error in state: 1104.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA STRING EQ TO
##
## Ends in an error in state: 1102.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF BRA TO
##
## Ends in an error in state: 930.
##
## prim -> BRA . revexprlist KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ expr KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL0 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL1 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL2 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL3 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL4 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL5 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL6 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL7 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL8 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL9 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR0 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR1 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR2 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR3 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR4 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR5 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR6 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR7 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR8 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR9 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL0 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL1 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL2 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL3 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL4 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL5 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL6 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL7 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL8 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL9 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR0 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR1 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR2 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR3 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR4 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR5 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR6 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR7 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR8 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR9 KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr EQ KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . ALT revcases ALT KET [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF FUN ALT TO
##
## Ends in an error in state: 927.
##
## prim -> FUN option(eoc) . revcases NUF [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 928.
##
## prim -> FUN option(eoc) revcases . NUF [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF FUN TO
##
## Ends in an error in state: 926.
##
## prim -> FUN . option(eoc) revcases NUF [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL0 TO
##
## Ends in an error in state: 1969.
##
## expr -> expr BINL0 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL1 TO
##
## Ends in an error in state: 1961.
##
## expr -> expr BINL1 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL2 TO
##
## Ends in an error in state: 1953.
##
## expr -> expr BINL2 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL3 TO
##
## Ends in an error in state: 1945.
##
## expr -> expr BINL3 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL4 TO
##
## Ends in an error in state: 1937.
##
## expr -> expr BINL4 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL5 TO
##
## Ends in an error in state: 1929.
##
## expr -> expr BINL5 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL6 TO
##
## Ends in an error in state: 1921.
##
## expr -> expr BINL6 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL7 TO
##
## Ends in an error in state: 1913.
##
## expr -> expr BINL7 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL8 TO
##
## Ends in an error in state: 1905.
##
## expr -> expr BINL8 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINL9 TO
##
## Ends in an error in state: 1897.
##
## expr -> expr BINL9 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR0 TO
##
## Ends in an error in state: 1967.
##
## expr -> expr BINR0 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR1 TO
##
## Ends in an error in state: 1959.
##
## expr -> expr BINR1 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR2 TO
##
## Ends in an error in state: 1951.
##
## expr -> expr BINR2 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR3 TO
##
## Ends in an error in state: 1943.
##
## expr -> expr BINR3 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR4 TO
##
## Ends in an error in state: 1935.
##
## expr -> expr BINR4 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR5 TO
##
## Ends in an error in state: 1927.
##
## expr -> expr BINR5 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR6 TO
##
## Ends in an error in state: 1919.
##
## expr -> expr BINR6 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR7 TO
##
## Ends in an error in state: 1911.
##
## expr -> expr BINR7 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR8 TO
##
## Ends in an error in state: 1903.
##
## expr -> expr BINR8 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING BINR9 TO
##
## Ends in an error in state: 1895.
##
## expr -> expr BINR9 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL0 TO
##
## Ends in an error in state: 1965.
##
## expr -> expr CONL0 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL1 TO
##
## Ends in an error in state: 1957.
##
## expr -> expr CONL1 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL2 TO
##
## Ends in an error in state: 1949.
##
## expr -> expr CONL2 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL3 TO
##
## Ends in an error in state: 1941.
##
## expr -> expr CONL3 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL4 TO
##
## Ends in an error in state: 1933.
##
## expr -> expr CONL4 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL5 TO
##
## Ends in an error in state: 1925.
##
## expr -> expr CONL5 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL6 TO
##
## Ends in an error in state: 1917.
##
## expr -> expr CONL6 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL7 TO
##
## Ends in an error in state: 1909.
##
## expr -> expr CONL7 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL8 TO
##
## Ends in an error in state: 1901.
##
## expr -> expr CONL8 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONL9 TO
##
## Ends in an error in state: 1891.
##
## expr -> expr CONL9 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR0 TO
##
## Ends in an error in state: 1963.
##
## expr -> expr CONR0 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR1 TO
##
## Ends in an error in state: 1955.
##
## expr -> expr CONR1 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR2 TO
##
## Ends in an error in state: 1947.
##
## expr -> expr CONR2 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR3 TO
##
## Ends in an error in state: 1939.
##
## expr -> expr CONR3 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR4 TO
##
## Ends in an error in state: 1931.
##
## expr -> expr CONR4 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR5 TO
##
## Ends in an error in state: 1923.
##
## expr -> expr CONR5 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR6 TO
##
## Ends in an error in state: 1915.
##
## expr -> expr CONR6 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR7 TO
##
## Ends in an error in state: 1907.
##
## expr -> expr CONR7 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR8 TO
##
## Ends in an error in state: 1899.
##
## expr -> expr CONR8 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING CONR9 TO
##
## Ends in an error in state: 1889.
##
## expr -> expr CONR9 . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING EQ TO
##
## Ends in an error in state: 1887.
##
## expr -> expr EQ . expr [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 1363.
##
## prim -> BRA ALT revcases ALT . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 1362.
##
## prim -> BRA ALT revcases . ALT KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA ALT TO
##
## Ends in an error in state: 1361.
##
## prim -> BRA ALT . revcases ALT KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL0 TO
##
## Ends in an error in state: 1357.
##
## prim -> BRA BINL0 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL0 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL1 TO
##
## Ends in an error in state: 1353.
##
## prim -> BRA BINL1 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL1 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL2 TO
##
## Ends in an error in state: 1349.
##
## prim -> BRA BINL2 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL2 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL3 TO
##
## Ends in an error in state: 1345.
##
## prim -> BRA BINL3 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL3 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL4 TO
##
## Ends in an error in state: 1341.
##
## prim -> BRA BINL4 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL4 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL5 TO
##
## Ends in an error in state: 1337.
##
## prim -> BRA BINL5 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL5 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL6 TO
##
## Ends in an error in state: 1333.
##
## prim -> BRA BINL6 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL6 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL7 TO
##
## Ends in an error in state: 1329.
##
## prim -> BRA BINL7 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL7 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL8 TO
##
## Ends in an error in state: 1325.
##
## prim -> BRA BINL8 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL8 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINL9 TO
##
## Ends in an error in state: 1321.
##
## prim -> BRA BINL9 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL9 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR0 TO
##
## Ends in an error in state: 1317.
##
## prim -> BRA BINR0 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR0 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR1 TO
##
## Ends in an error in state: 1313.
##
## prim -> BRA BINR1 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR1 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR2 TO
##
## Ends in an error in state: 1309.
##
## prim -> BRA BINR2 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR2 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR3 TO
##
## Ends in an error in state: 1305.
##
## prim -> BRA BINR3 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR3 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR4 TO
##
## Ends in an error in state: 1301.
##
## prim -> BRA BINR4 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR4 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR5 TO
##
## Ends in an error in state: 1297.
##
## prim -> BRA BINR5 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR5 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR6 TO
##
## Ends in an error in state: 1293.
##
## prim -> BRA BINR6 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR6 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR7 TO
##
## Ends in an error in state: 1289.
##
## prim -> BRA BINR7 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR7 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR8 TO
##
## Ends in an error in state: 1285.
##
## prim -> BRA BINR8 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR8 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA BINR9 TO
##
## Ends in an error in state: 1281.
##
## prim -> BRA BINR9 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR9 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL0 TO
##
## Ends in an error in state: 1277.
##
## prim -> BRA CONL0 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL0 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL1 TO
##
## Ends in an error in state: 1273.
##
## prim -> BRA CONL1 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL1 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL2 TO
##
## Ends in an error in state: 1269.
##
## prim -> BRA CONL2 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL2 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL3 TO
##
## Ends in an error in state: 1265.
##
## prim -> BRA CONL3 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL3 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL4 TO
##
## Ends in an error in state: 1261.
##
## prim -> BRA CONL4 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL4 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL5 TO
##
## Ends in an error in state: 1257.
##
## prim -> BRA CONL5 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL5 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL6 TO
##
## Ends in an error in state: 1253.
##
## prim -> BRA CONL6 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL6 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL7 TO
##
## Ends in an error in state: 1249.
##
## prim -> BRA CONL7 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL7 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL8 TO
##
## Ends in an error in state: 1245.
##
## prim -> BRA CONL8 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL8 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONL9 TO
##
## Ends in an error in state: 1241.
##
## prim -> BRA CONL9 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL9 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR0 TO
##
## Ends in an error in state: 1237.
##
## prim -> BRA CONR0 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR0 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR1 TO
##
## Ends in an error in state: 1233.
##
## prim -> BRA CONR1 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR1 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR2 TO
##
## Ends in an error in state: 1229.
##
## prim -> BRA CONR2 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR2 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR3 TO
##
## Ends in an error in state: 1225.
##
## prim -> BRA CONR3 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR3 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR4 TO
##
## Ends in an error in state: 1221.
##
## prim -> BRA CONR4 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR4 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR5 TO
##
## Ends in an error in state: 1217.
##
## prim -> BRA CONR5 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR5 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR6 TO
##
## Ends in an error in state: 1213.
##
## prim -> BRA CONR6 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR6 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR7 TO
##
## Ends in an error in state: 1209.
##
## prim -> BRA CONR7 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR7 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR8 TO
##
## Ends in an error in state: 1205.
##
## prim -> BRA CONR8 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR8 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA CONR9 TO
##
## Ends in an error in state: 1201.
##
## prim -> BRA CONR9 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR9 . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA EQ TO
##
## Ends in an error in state: 1197.
##
## prim -> BRA EQ . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA EQ . expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL0 TO
##
## Ends in an error in state: 1448.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL1 TO
##
## Ends in an error in state: 1446.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL2 TO
##
## Ends in an error in state: 1444.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL3 TO
##
## Ends in an error in state: 1442.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL4 TO
##
## Ends in an error in state: 1440.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL5 TO
##
## Ends in an error in state: 1438.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL6 TO
##
## Ends in an error in state: 1436.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL7 TO
##
## Ends in an error in state: 1434.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL8 TO
##
## Ends in an error in state: 1432.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINL9 TO
##
## Ends in an error in state: 1430.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR0 TO
##
## Ends in an error in state: 1428.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR1 TO
##
## Ends in an error in state: 1426.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR2 TO
##
## Ends in an error in state: 1424.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR3 TO
##
## Ends in an error in state: 1422.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR4 TO
##
## Ends in an error in state: 1420.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR5 TO
##
## Ends in an error in state: 1418.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR6 TO
##
## Ends in an error in state: 1416.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR7 TO
##
## Ends in an error in state: 1414.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR8 TO
##
## Ends in an error in state: 1412.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING BINR9 TO
##
## Ends in an error in state: 1410.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL0 TO
##
## Ends in an error in state: 1408.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL1 TO
##
## Ends in an error in state: 1406.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL2 TO
##
## Ends in an error in state: 1404.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL3 TO
##
## Ends in an error in state: 1402.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL4 TO
##
## Ends in an error in state: 1400.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL5 TO
##
## Ends in an error in state: 1398.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL6 TO
##
## Ends in an error in state: 1396.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL7 TO
##
## Ends in an error in state: 1394.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL8 TO
##
## Ends in an error in state: 1392.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONL9 TO
##
## Ends in an error in state: 1390.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR0 TO
##
## Ends in an error in state: 1388.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR1 TO
##
## Ends in an error in state: 1386.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR2 TO
##
## Ends in an error in state: 1384.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR3 TO
##
## Ends in an error in state: 1382.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR4 TO
##
## Ends in an error in state: 1380.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR5 TO
##
## Ends in an error in state: 1378.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR6 TO
##
## Ends in an error in state: 1376.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR7 TO
##
## Ends in an error in state: 1374.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR8 TO
##
## Ends in an error in state: 1372.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING CONR9 TO
##
## Ends in an error in state: 1370.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA STRING EQ TO
##
## Ends in an error in state: 1368.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN BRA TO
##
## Ends in an error in state: 1196.
##
## prim -> BRA . revexprlist KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ expr KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL0 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL1 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL2 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL3 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL4 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL5 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL6 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL7 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL8 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL9 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR0 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR1 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR2 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR3 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR4 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR5 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR6 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR7 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR8 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR9 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL0 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL1 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL2 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL3 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL4 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL5 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL6 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL7 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL8 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL9 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR0 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR1 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR2 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR3 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR4 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR5 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR6 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR7 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR8 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR9 KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr EQ KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . ALT revcases ALT KET [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN FUN ALT TO
##
## Ends in an error in state: 1193.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 1194.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN FUN TO
##
## Ends in an error in state: 1192.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL0 TO
##
## Ends in an error in state: 1885.
##
## expr -> expr BINL0 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL1 TO
##
## Ends in an error in state: 1877.
##
## expr -> expr BINL1 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL2 TO
##
## Ends in an error in state: 1869.
##
## expr -> expr BINL2 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL3 TO
##
## Ends in an error in state: 1512.
##
## expr -> expr BINL3 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL4 TO
##
## Ends in an error in state: 1504.
##
## expr -> expr BINL4 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL5 TO
##
## Ends in an error in state: 1496.
##
## expr -> expr BINL5 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL6 TO
##
## Ends in an error in state: 1488.
##
## expr -> expr BINL6 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL7 TO
##
## Ends in an error in state: 1480.
##
## expr -> expr BINL7 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL8 TO
##
## Ends in an error in state: 1472.
##
## expr -> expr BINL8 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINL9 TO
##
## Ends in an error in state: 1464.
##
## expr -> expr BINL9 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR0 TO
##
## Ends in an error in state: 1883.
##
## expr -> expr BINR0 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR1 TO
##
## Ends in an error in state: 1875.
##
## expr -> expr BINR1 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR2 TO
##
## Ends in an error in state: 1867.
##
## expr -> expr BINR2 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR3 TO
##
## Ends in an error in state: 1510.
##
## expr -> expr BINR3 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR4 TO
##
## Ends in an error in state: 1502.
##
## expr -> expr BINR4 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR5 TO
##
## Ends in an error in state: 1494.
##
## expr -> expr BINR5 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR6 TO
##
## Ends in an error in state: 1486.
##
## expr -> expr BINR6 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR7 TO
##
## Ends in an error in state: 1478.
##
## expr -> expr BINR7 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR8 TO
##
## Ends in an error in state: 1470.
##
## expr -> expr BINR8 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING BINR9 TO
##
## Ends in an error in state: 1462.
##
## expr -> expr BINR9 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL0 TO
##
## Ends in an error in state: 1881.
##
## expr -> expr CONL0 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL1 TO
##
## Ends in an error in state: 1873.
##
## expr -> expr CONL1 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL2 TO
##
## Ends in an error in state: 1865.
##
## expr -> expr CONL2 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL3 TO
##
## Ends in an error in state: 1508.
##
## expr -> expr CONL3 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL4 TO
##
## Ends in an error in state: 1500.
##
## expr -> expr CONL4 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL5 TO
##
## Ends in an error in state: 1492.
##
## expr -> expr CONL5 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL6 TO
##
## Ends in an error in state: 1484.
##
## expr -> expr CONL6 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL7 TO
##
## Ends in an error in state: 1476.
##
## expr -> expr CONL7 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL8 TO
##
## Ends in an error in state: 1468.
##
## expr -> expr CONL8 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONL9 TO
##
## Ends in an error in state: 1458.
##
## expr -> expr CONL9 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR0 TO
##
## Ends in an error in state: 1879.
##
## expr -> expr CONR0 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR1 TO
##
## Ends in an error in state: 1871.
##
## expr -> expr CONR1 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR2 TO
##
## Ends in an error in state: 1863.
##
## expr -> expr CONR2 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR3 TO
##
## Ends in an error in state: 1506.
##
## expr -> expr CONR3 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR4 TO
##
## Ends in an error in state: 1498.
##
## expr -> expr CONR4 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR5 TO
##
## Ends in an error in state: 1490.
##
## expr -> expr CONR5 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR6 TO
##
## Ends in an error in state: 1482.
##
## expr -> expr CONR6 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR7 TO
##
## Ends in an error in state: 1474.
##
## expr -> expr CONR7 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR8 TO
##
## Ends in an error in state: 1466.
##
## expr -> expr CONR8 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING CONR9 TO
##
## Ends in an error in state: 1456.
##
## expr -> expr CONR9 . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING ELSE TO
##
## Ends in an error in state: 4171.
##
## topexpr -> IF expr THEN expr ELSE . topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## IF expr THEN expr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING EQ TO
##
## Ends in an error in state: 1454.
##
## expr -> expr EQ . expr [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN STRING TO
##
## Ends in an error in state: 1460.
##
## app -> app . prim [ STRING NUM ID FUN EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## term -> app . [ EQ ELSE CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING THEN TO
##
## Ends in an error in state: 4169.
##
## topexpr -> IF expr THEN . expr ELSE topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## IF expr THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF STRING TO
##
## Ends in an error in state: 1893.
##
## app -> app . prim [ THEN STRING NUM ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## term -> app . [ THEN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: IF TO
##
## Ends in an error in state: 4167.
##
## topexpr -> IF . expr THEN expr ELSE topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL0 KET THEN
##
## Ends in an error in state: 895.
##
## nonempty_list(simplex) -> BRA BINL0 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL0 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL0 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL0 TO
##
## Ends in an error in state: 894.
##
## nonempty_list(simplex) -> BRA BINL0 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL0 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL1 KET THEN
##
## Ends in an error in state: 892.
##
## nonempty_list(simplex) -> BRA BINL1 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL1 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL1 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL1 TO
##
## Ends in an error in state: 891.
##
## nonempty_list(simplex) -> BRA BINL1 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL1 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL2 KET THEN
##
## Ends in an error in state: 889.
##
## nonempty_list(simplex) -> BRA BINL2 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL2 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL2 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL2 TO
##
## Ends in an error in state: 888.
##
## nonempty_list(simplex) -> BRA BINL2 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL2 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL3 KET THEN
##
## Ends in an error in state: 886.
##
## nonempty_list(simplex) -> BRA BINL3 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL3 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL3 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL3 TO
##
## Ends in an error in state: 885.
##
## nonempty_list(simplex) -> BRA BINL3 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL3 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL4 KET THEN
##
## Ends in an error in state: 883.
##
## nonempty_list(simplex) -> BRA BINL4 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL4 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL4 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL4 TO
##
## Ends in an error in state: 882.
##
## nonempty_list(simplex) -> BRA BINL4 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL4 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL5 KET THEN
##
## Ends in an error in state: 880.
##
## nonempty_list(simplex) -> BRA BINL5 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL5 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL5 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL5 TO
##
## Ends in an error in state: 879.
##
## nonempty_list(simplex) -> BRA BINL5 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL5 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL6 KET THEN
##
## Ends in an error in state: 877.
##
## nonempty_list(simplex) -> BRA BINL6 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL6 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL6 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL6 TO
##
## Ends in an error in state: 876.
##
## nonempty_list(simplex) -> BRA BINL6 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL6 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL7 KET THEN
##
## Ends in an error in state: 874.
##
## nonempty_list(simplex) -> BRA BINL7 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL7 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL7 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL7 TO
##
## Ends in an error in state: 873.
##
## nonempty_list(simplex) -> BRA BINL7 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL7 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL8 KET THEN
##
## Ends in an error in state: 871.
##
## nonempty_list(simplex) -> BRA BINL8 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL8 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL8 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL8 TO
##
## Ends in an error in state: 870.
##
## nonempty_list(simplex) -> BRA BINL8 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL8 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL9 KET THEN
##
## Ends in an error in state: 868.
##
## nonempty_list(simplex) -> BRA BINL9 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINL9 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL9 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINL9 TO
##
## Ends in an error in state: 867.
##
## nonempty_list(simplex) -> BRA BINL9 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINL9 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR0 KET THEN
##
## Ends in an error in state: 865.
##
## nonempty_list(simplex) -> BRA BINR0 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR0 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR0 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR0 TO
##
## Ends in an error in state: 864.
##
## nonempty_list(simplex) -> BRA BINR0 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR0 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR1 KET THEN
##
## Ends in an error in state: 862.
##
## nonempty_list(simplex) -> BRA BINR1 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR1 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR1 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR1 TO
##
## Ends in an error in state: 861.
##
## nonempty_list(simplex) -> BRA BINR1 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR1 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR2 KET THEN
##
## Ends in an error in state: 859.
##
## nonempty_list(simplex) -> BRA BINR2 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR2 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR2 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR2 TO
##
## Ends in an error in state: 858.
##
## nonempty_list(simplex) -> BRA BINR2 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR2 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR3 KET THEN
##
## Ends in an error in state: 856.
##
## nonempty_list(simplex) -> BRA BINR3 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR3 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR3 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR3 TO
##
## Ends in an error in state: 855.
##
## nonempty_list(simplex) -> BRA BINR3 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR3 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR4 KET THEN
##
## Ends in an error in state: 853.
##
## nonempty_list(simplex) -> BRA BINR4 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR4 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR4 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR4 TO
##
## Ends in an error in state: 852.
##
## nonempty_list(simplex) -> BRA BINR4 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR4 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR5 KET THEN
##
## Ends in an error in state: 850.
##
## nonempty_list(simplex) -> BRA BINR5 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR5 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR5 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR5 TO
##
## Ends in an error in state: 849.
##
## nonempty_list(simplex) -> BRA BINR5 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR5 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR6 KET THEN
##
## Ends in an error in state: 847.
##
## nonempty_list(simplex) -> BRA BINR6 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR6 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR6 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR6 TO
##
## Ends in an error in state: 846.
##
## nonempty_list(simplex) -> BRA BINR6 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR6 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR7 KET THEN
##
## Ends in an error in state: 844.
##
## nonempty_list(simplex) -> BRA BINR7 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR7 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR7 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR7 TO
##
## Ends in an error in state: 843.
##
## nonempty_list(simplex) -> BRA BINR7 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR7 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR8 KET THEN
##
## Ends in an error in state: 841.
##
## nonempty_list(simplex) -> BRA BINR8 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR8 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR8 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR8 TO
##
## Ends in an error in state: 840.
##
## nonempty_list(simplex) -> BRA BINR8 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR8 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR9 KET THEN
##
## Ends in an error in state: 838.
##
## nonempty_list(simplex) -> BRA BINR9 KET . [ TO ]
## nonempty_list(simplex) -> BRA BINR9 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR9 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BINR9 TO
##
## Ends in an error in state: 837.
##
## nonempty_list(simplex) -> BRA BINR9 . KET [ TO ]
## nonempty_list(simplex) -> BRA BINR9 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 659.
##
## prim -> BRA ALT revcases ALT . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 658.
##
## prim -> BRA ALT revcases . ALT KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA ALT TO
##
## Ends in an error in state: 657.
##
## prim -> BRA ALT . revcases ALT KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL0 TO
##
## Ends in an error in state: 653.
##
## prim -> BRA BINL0 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL0 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL1 TO
##
## Ends in an error in state: 649.
##
## prim -> BRA BINL1 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL1 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL2 TO
##
## Ends in an error in state: 645.
##
## prim -> BRA BINL2 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL2 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL3 TO
##
## Ends in an error in state: 641.
##
## prim -> BRA BINL3 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL3 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL4 TO
##
## Ends in an error in state: 637.
##
## prim -> BRA BINL4 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL4 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL5 TO
##
## Ends in an error in state: 633.
##
## prim -> BRA BINL5 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL5 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL6 TO
##
## Ends in an error in state: 629.
##
## prim -> BRA BINL6 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL6 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL7 TO
##
## Ends in an error in state: 625.
##
## prim -> BRA BINL7 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL7 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL8 TO
##
## Ends in an error in state: 621.
##
## prim -> BRA BINL8 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL8 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINL9 TO
##
## Ends in an error in state: 617.
##
## prim -> BRA BINL9 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL9 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR0 TO
##
## Ends in an error in state: 613.
##
## prim -> BRA BINR0 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR0 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR1 TO
##
## Ends in an error in state: 609.
##
## prim -> BRA BINR1 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR1 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR2 TO
##
## Ends in an error in state: 605.
##
## prim -> BRA BINR2 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR2 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR3 TO
##
## Ends in an error in state: 601.
##
## prim -> BRA BINR3 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR3 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR4 TO
##
## Ends in an error in state: 597.
##
## prim -> BRA BINR4 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR4 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR5 TO
##
## Ends in an error in state: 593.
##
## prim -> BRA BINR5 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR5 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR6 TO
##
## Ends in an error in state: 589.
##
## prim -> BRA BINR6 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR6 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR7 TO
##
## Ends in an error in state: 585.
##
## prim -> BRA BINR7 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR7 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR8 TO
##
## Ends in an error in state: 581.
##
## prim -> BRA BINR8 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR8 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA BINR9 TO
##
## Ends in an error in state: 577.
##
## prim -> BRA BINR9 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR9 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL0 TO
##
## Ends in an error in state: 573.
##
## prim -> BRA CONL0 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL0 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL1 TO
##
## Ends in an error in state: 569.
##
## prim -> BRA CONL1 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL1 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL2 TO
##
## Ends in an error in state: 565.
##
## prim -> BRA CONL2 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL2 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL3 TO
##
## Ends in an error in state: 561.
##
## prim -> BRA CONL3 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL3 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL4 TO
##
## Ends in an error in state: 557.
##
## prim -> BRA CONL4 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL4 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL5 TO
##
## Ends in an error in state: 553.
##
## prim -> BRA CONL5 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL5 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL6 TO
##
## Ends in an error in state: 549.
##
## prim -> BRA CONL6 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL6 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL7 TO
##
## Ends in an error in state: 545.
##
## prim -> BRA CONL7 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL7 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL8 TO
##
## Ends in an error in state: 541.
##
## prim -> BRA CONL8 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL8 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONL9 TO
##
## Ends in an error in state: 537.
##
## prim -> BRA CONL9 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL9 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR0 TO
##
## Ends in an error in state: 533.
##
## prim -> BRA CONR0 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR0 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR1 TO
##
## Ends in an error in state: 529.
##
## prim -> BRA CONR1 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR1 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR2 TO
##
## Ends in an error in state: 525.
##
## prim -> BRA CONR2 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR2 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR3 TO
##
## Ends in an error in state: 521.
##
## prim -> BRA CONR3 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR3 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR4 TO
##
## Ends in an error in state: 517.
##
## prim -> BRA CONR4 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR4 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR5 TO
##
## Ends in an error in state: 513.
##
## prim -> BRA CONR5 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR5 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR6 TO
##
## Ends in an error in state: 509.
##
## prim -> BRA CONR6 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR6 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR7 TO
##
## Ends in an error in state: 505.
##
## prim -> BRA CONR7 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR7 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR8 TO
##
## Ends in an error in state: 501.
##
## prim -> BRA CONR8 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR8 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA CONR9 TO
##
## Ends in an error in state: 497.
##
## prim -> BRA CONR9 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR9 . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA EQ TO
##
## Ends in an error in state: 493.
##
## prim -> BRA EQ . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA EQ . expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL0 TO
##
## Ends in an error in state: 835.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL1 TO
##
## Ends in an error in state: 833.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL2 TO
##
## Ends in an error in state: 831.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL3 TO
##
## Ends in an error in state: 829.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL4 TO
##
## Ends in an error in state: 827.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL5 TO
##
## Ends in an error in state: 825.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL6 TO
##
## Ends in an error in state: 823.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL7 TO
##
## Ends in an error in state: 821.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL8 TO
##
## Ends in an error in state: 819.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINL9 TO
##
## Ends in an error in state: 817.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR0 TO
##
## Ends in an error in state: 815.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR1 TO
##
## Ends in an error in state: 813.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR2 TO
##
## Ends in an error in state: 811.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR3 TO
##
## Ends in an error in state: 809.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR4 TO
##
## Ends in an error in state: 807.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR5 TO
##
## Ends in an error in state: 805.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR6 TO
##
## Ends in an error in state: 803.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR7 TO
##
## Ends in an error in state: 801.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR8 TO
##
## Ends in an error in state: 799.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING BINR9 TO
##
## Ends in an error in state: 797.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL0 TO
##
## Ends in an error in state: 795.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL1 TO
##
## Ends in an error in state: 793.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL2 TO
##
## Ends in an error in state: 791.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL3 TO
##
## Ends in an error in state: 789.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL4 TO
##
## Ends in an error in state: 787.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL5 TO
##
## Ends in an error in state: 785.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL6 TO
##
## Ends in an error in state: 783.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL7 TO
##
## Ends in an error in state: 781.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL8 TO
##
## Ends in an error in state: 779.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONL9 TO
##
## Ends in an error in state: 777.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR0 TO
##
## Ends in an error in state: 775.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR1 TO
##
## Ends in an error in state: 773.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR2 TO
##
## Ends in an error in state: 771.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR3 TO
##
## Ends in an error in state: 769.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR4 TO
##
## Ends in an error in state: 767.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR5 TO
##
## Ends in an error in state: 765.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR6 TO
##
## Ends in an error in state: 763.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR7 TO
##
## Ends in an error in state: 761.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR8 TO
##
## Ends in an error in state: 759.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING CONR9 TO
##
## Ends in an error in state: 757.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA STRING EQ TO
##
## Ends in an error in state: 755.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA BRA TO
##
## Ends in an error in state: 492.
##
## prim -> BRA . revexprlist KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ expr KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL0 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL1 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL2 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL3 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL4 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL5 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL6 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL7 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL8 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL9 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR0 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR1 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR2 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR3 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR4 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR5 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR6 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR7 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR8 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR9 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL0 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL1 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL2 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL3 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL4 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL5 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL6 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL7 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL8 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL9 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR0 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR1 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR2 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR3 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR4 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR5 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR6 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR7 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR8 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR9 KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr EQ KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . ALT revcases ALT KET [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL0 KET THEN
##
## Ends in an error in state: 211.
##
## nonempty_list(simplex) -> BRA CONL0 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL0 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL0 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL0 TO
##
## Ends in an error in state: 210.
##
## nonempty_list(simplex) -> BRA CONL0 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL0 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL1 KET THEN
##
## Ends in an error in state: 208.
##
## nonempty_list(simplex) -> BRA CONL1 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL1 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL1 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL1 TO
##
## Ends in an error in state: 207.
##
## nonempty_list(simplex) -> BRA CONL1 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL1 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL2 KET THEN
##
## Ends in an error in state: 205.
##
## nonempty_list(simplex) -> BRA CONL2 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL2 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL2 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL2 TO
##
## Ends in an error in state: 204.
##
## nonempty_list(simplex) -> BRA CONL2 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL2 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL3 KET THEN
##
## Ends in an error in state: 202.
##
## nonempty_list(simplex) -> BRA CONL3 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL3 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL3 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL3 TO
##
## Ends in an error in state: 201.
##
## nonempty_list(simplex) -> BRA CONL3 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL3 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL4 KET THEN
##
## Ends in an error in state: 199.
##
## nonempty_list(simplex) -> BRA CONL4 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL4 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL4 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL4 TO
##
## Ends in an error in state: 198.
##
## nonempty_list(simplex) -> BRA CONL4 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL4 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL5 KET THEN
##
## Ends in an error in state: 196.
##
## nonempty_list(simplex) -> BRA CONL5 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL5 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL5 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL5 TO
##
## Ends in an error in state: 195.
##
## nonempty_list(simplex) -> BRA CONL5 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL5 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL6 KET THEN
##
## Ends in an error in state: 193.
##
## nonempty_list(simplex) -> BRA CONL6 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL6 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL6 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL6 TO
##
## Ends in an error in state: 192.
##
## nonempty_list(simplex) -> BRA CONL6 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL6 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL7 KET THEN
##
## Ends in an error in state: 190.
##
## nonempty_list(simplex) -> BRA CONL7 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL7 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL7 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL7 TO
##
## Ends in an error in state: 189.
##
## nonempty_list(simplex) -> BRA CONL7 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL7 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL8 KET THEN
##
## Ends in an error in state: 187.
##
## nonempty_list(simplex) -> BRA CONL8 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL8 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL8 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL8 TO
##
## Ends in an error in state: 186.
##
## nonempty_list(simplex) -> BRA CONL8 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL8 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL9 KET THEN
##
## Ends in an error in state: 184.
##
## nonempty_list(simplex) -> BRA CONL9 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONL9 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL9 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONL9 TO
##
## Ends in an error in state: 183.
##
## nonempty_list(simplex) -> BRA CONL9 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONL9 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR0 KET THEN
##
## Ends in an error in state: 181.
##
## nonempty_list(simplex) -> BRA CONR0 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR0 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR0 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR0 TO
##
## Ends in an error in state: 180.
##
## nonempty_list(simplex) -> BRA CONR0 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR0 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR1 KET THEN
##
## Ends in an error in state: 178.
##
## nonempty_list(simplex) -> BRA CONR1 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR1 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR1 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR1 TO
##
## Ends in an error in state: 177.
##
## nonempty_list(simplex) -> BRA CONR1 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR1 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR2 KET THEN
##
## Ends in an error in state: 175.
##
## nonempty_list(simplex) -> BRA CONR2 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR2 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR2 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR2 TO
##
## Ends in an error in state: 174.
##
## nonempty_list(simplex) -> BRA CONR2 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR2 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR3 KET THEN
##
## Ends in an error in state: 172.
##
## nonempty_list(simplex) -> BRA CONR3 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR3 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR3 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR3 TO
##
## Ends in an error in state: 171.
##
## nonempty_list(simplex) -> BRA CONR3 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR3 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR4 KET THEN
##
## Ends in an error in state: 169.
##
## nonempty_list(simplex) -> BRA CONR4 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR4 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR4 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR4 TO
##
## Ends in an error in state: 168.
##
## nonempty_list(simplex) -> BRA CONR4 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR4 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR5 KET THEN
##
## Ends in an error in state: 166.
##
## nonempty_list(simplex) -> BRA CONR5 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR5 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR5 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR5 TO
##
## Ends in an error in state: 165.
##
## nonempty_list(simplex) -> BRA CONR5 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR5 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR6 KET THEN
##
## Ends in an error in state: 163.
##
## nonempty_list(simplex) -> BRA CONR6 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR6 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR6 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR6 TO
##
## Ends in an error in state: 162.
##
## nonempty_list(simplex) -> BRA CONR6 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR6 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR7 KET THEN
##
## Ends in an error in state: 160.
##
## nonempty_list(simplex) -> BRA CONR7 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR7 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR7 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR7 TO
##
## Ends in an error in state: 159.
##
## nonempty_list(simplex) -> BRA CONR7 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR7 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR8 KET THEN
##
## Ends in an error in state: 157.
##
## nonempty_list(simplex) -> BRA CONR8 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR8 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR8 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR8 TO
##
## Ends in an error in state: 156.
##
## nonempty_list(simplex) -> BRA CONR8 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR8 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR9 KET THEN
##
## Ends in an error in state: 154.
##
## nonempty_list(simplex) -> BRA CONR9 KET . [ TO ]
## nonempty_list(simplex) -> BRA CONR9 KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR9 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA CONR9 TO
##
## Ends in an error in state: 153.
##
## nonempty_list(simplex) -> BRA CONR9 . KET [ TO ]
## nonempty_list(simplex) -> BRA CONR9 . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA EQ KET THEN
##
## Ends in an error in state: 149.
##
## nonempty_list(simplex) -> BRA EQ KET . [ TO ]
## nonempty_list(simplex) -> BRA EQ KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA EQ KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA EQ TO
##
## Ends in an error in state: 148.
##
## nonempty_list(simplex) -> BRA EQ . KET [ TO ]
## nonempty_list(simplex) -> BRA EQ . KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA FUN ALT TO
##
## Ends in an error in state: 482.
##
## prim -> FUN option(eoc) . revcases NUF [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 483.
##
## prim -> FUN option(eoc) revcases . NUF [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA FUN TO
##
## Ends in an error in state: 481.
##
## prim -> FUN . option(eoc) revcases NUF [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA KET THEN
##
## Ends in an error in state: 907.
##
## nonempty_list(simplex) -> BRA revexprlist KET . [ TO ]
## nonempty_list(simplex) -> BRA revexprlist KET . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA revexprlist KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL0 TO
##
## Ends in an error in state: 752.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL1 TO
##
## Ends in an error in state: 744.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL2 TO
##
## Ends in an error in state: 736.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL3 TO
##
## Ends in an error in state: 728.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL4 TO
##
## Ends in an error in state: 720.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL5 TO
##
## Ends in an error in state: 712.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL6 TO
##
## Ends in an error in state: 704.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL7 TO
##
## Ends in an error in state: 696.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL8 TO
##
## Ends in an error in state: 688.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINL9 TO
##
## Ends in an error in state: 680.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR0 TO
##
## Ends in an error in state: 750.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR1 TO
##
## Ends in an error in state: 742.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR2 TO
##
## Ends in an error in state: 734.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR3 TO
##
## Ends in an error in state: 726.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR4 TO
##
## Ends in an error in state: 718.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR5 TO
##
## Ends in an error in state: 710.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR6 TO
##
## Ends in an error in state: 702.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR7 TO
##
## Ends in an error in state: 694.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR8 TO
##
## Ends in an error in state: 686.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING BINR9 TO
##
## Ends in an error in state: 678.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL0 TO
##
## Ends in an error in state: 748.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL1 TO
##
## Ends in an error in state: 740.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL2 TO
##
## Ends in an error in state: 732.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL3 TO
##
## Ends in an error in state: 724.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL4 TO
##
## Ends in an error in state: 716.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL5 TO
##
## Ends in an error in state: 708.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL6 TO
##
## Ends in an error in state: 700.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL7 TO
##
## Ends in an error in state: 692.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL8 TO
##
## Ends in an error in state: 684.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONL9 TO
##
## Ends in an error in state: 674.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR0 TO
##
## Ends in an error in state: 746.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR1 TO
##
## Ends in an error in state: 738.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR2 TO
##
## Ends in an error in state: 730.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR3 TO
##
## Ends in an error in state: 722.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR4 TO
##
## Ends in an error in state: 714.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR5 TO
##
## Ends in an error in state: 706.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR6 TO
##
## Ends in an error in state: 698.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR7 TO
##
## Ends in an error in state: 690.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR8 TO
##
## Ends in an error in state: 682.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING CONR9 TO
##
## Ends in an error in state: 672.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING EQ TO
##
## Ends in an error in state: 670.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING THEN
##
## Ends in an error in state: 918.
##
## app -> app . prim [ TO STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## term -> app . [ TO KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 1687.
##
## prim -> BRA ALT revcases ALT . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 1686.
##
## prim -> BRA ALT revcases . ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA ALT TO
##
## Ends in an error in state: 1685.
##
## prim -> BRA ALT . revcases ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL0 TO
##
## Ends in an error in state: 1681.
##
## prim -> BRA BINL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL1 TO
##
## Ends in an error in state: 1677.
##
## prim -> BRA BINL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL2 TO
##
## Ends in an error in state: 1673.
##
## prim -> BRA BINL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL3 TO
##
## Ends in an error in state: 1669.
##
## prim -> BRA BINL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL4 TO
##
## Ends in an error in state: 1665.
##
## prim -> BRA BINL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL5 TO
##
## Ends in an error in state: 1661.
##
## prim -> BRA BINL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL6 TO
##
## Ends in an error in state: 1657.
##
## prim -> BRA BINL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL7 TO
##
## Ends in an error in state: 1653.
##
## prim -> BRA BINL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL8 TO
##
## Ends in an error in state: 1649.
##
## prim -> BRA BINL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINL9 TO
##
## Ends in an error in state: 1645.
##
## prim -> BRA BINL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINL9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR0 TO
##
## Ends in an error in state: 1641.
##
## prim -> BRA BINR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR1 TO
##
## Ends in an error in state: 1637.
##
## prim -> BRA BINR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR2 TO
##
## Ends in an error in state: 1633.
##
## prim -> BRA BINR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR3 TO
##
## Ends in an error in state: 1629.
##
## prim -> BRA BINR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR4 TO
##
## Ends in an error in state: 1625.
##
## prim -> BRA BINR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR5 TO
##
## Ends in an error in state: 1621.
##
## prim -> BRA BINR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR6 TO
##
## Ends in an error in state: 1617.
##
## prim -> BRA BINR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR7 TO
##
## Ends in an error in state: 1613.
##
## prim -> BRA BINR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR8 TO
##
## Ends in an error in state: 1609.
##
## prim -> BRA BINR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA BINR9 TO
##
## Ends in an error in state: 1605.
##
## prim -> BRA BINR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA BINR9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL0 TO
##
## Ends in an error in state: 1601.
##
## prim -> BRA CONL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL1 TO
##
## Ends in an error in state: 1597.
##
## prim -> BRA CONL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL2 TO
##
## Ends in an error in state: 1593.
##
## prim -> BRA CONL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL3 TO
##
## Ends in an error in state: 1589.
##
## prim -> BRA CONL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL4 TO
##
## Ends in an error in state: 1585.
##
## prim -> BRA CONL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL5 TO
##
## Ends in an error in state: 1581.
##
## prim -> BRA CONL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL6 TO
##
## Ends in an error in state: 1577.
##
## prim -> BRA CONL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL7 TO
##
## Ends in an error in state: 1573.
##
## prim -> BRA CONL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL8 TO
##
## Ends in an error in state: 1569.
##
## prim -> BRA CONL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONL9 TO
##
## Ends in an error in state: 1565.
##
## prim -> BRA CONL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONL9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR0 TO
##
## Ends in an error in state: 1561.
##
## prim -> BRA CONR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR0 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR1 TO
##
## Ends in an error in state: 1557.
##
## prim -> BRA CONR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR1 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR2 TO
##
## Ends in an error in state: 1553.
##
## prim -> BRA CONR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR2 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR3 TO
##
## Ends in an error in state: 1549.
##
## prim -> BRA CONR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR3 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR4 TO
##
## Ends in an error in state: 1545.
##
## prim -> BRA CONR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR4 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR5 TO
##
## Ends in an error in state: 1541.
##
## prim -> BRA CONR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR5 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR6 TO
##
## Ends in an error in state: 1537.
##
## prim -> BRA CONR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR6 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR7 TO
##
## Ends in an error in state: 1533.
##
## prim -> BRA CONR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR7 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR8 TO
##
## Ends in an error in state: 1529.
##
## prim -> BRA CONR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR8 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA CONR9 TO
##
## Ends in an error in state: 1525.
##
## prim -> BRA CONR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA CONR9 . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA EQ TO
##
## Ends in an error in state: 1521.
##
## prim -> BRA EQ . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA EQ . expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL0 TO
##
## Ends in an error in state: 1772.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL1 TO
##
## Ends in an error in state: 1770.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL2 TO
##
## Ends in an error in state: 1768.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL3 TO
##
## Ends in an error in state: 1766.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL4 TO
##
## Ends in an error in state: 1764.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL5 TO
##
## Ends in an error in state: 1762.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL6 TO
##
## Ends in an error in state: 1760.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL7 TO
##
## Ends in an error in state: 1758.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL8 TO
##
## Ends in an error in state: 1756.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINL9 TO
##
## Ends in an error in state: 1754.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR0 TO
##
## Ends in an error in state: 1752.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR1 TO
##
## Ends in an error in state: 1750.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR2 TO
##
## Ends in an error in state: 1748.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR3 TO
##
## Ends in an error in state: 1746.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR4 TO
##
## Ends in an error in state: 1744.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR5 TO
##
## Ends in an error in state: 1742.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR6 TO
##
## Ends in an error in state: 1740.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR7 TO
##
## Ends in an error in state: 1738.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR8 TO
##
## Ends in an error in state: 1736.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING BINR9 TO
##
## Ends in an error in state: 1734.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL0 TO
##
## Ends in an error in state: 1732.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL1 TO
##
## Ends in an error in state: 1730.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL2 TO
##
## Ends in an error in state: 1728.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL3 TO
##
## Ends in an error in state: 1726.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL4 TO
##
## Ends in an error in state: 1724.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL5 TO
##
## Ends in an error in state: 1722.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL6 TO
##
## Ends in an error in state: 1720.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL7 TO
##
## Ends in an error in state: 1718.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL8 TO
##
## Ends in an error in state: 1716.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONL9 TO
##
## Ends in an error in state: 1714.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR0 TO
##
## Ends in an error in state: 1712.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR1 TO
##
## Ends in an error in state: 1710.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR2 TO
##
## Ends in an error in state: 1708.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR3 TO
##
## Ends in an error in state: 1706.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR4 TO
##
## Ends in an error in state: 1704.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR5 TO
##
## Ends in an error in state: 1702.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR6 TO
##
## Ends in an error in state: 1700.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR7 TO
##
## Ends in an error in state: 1698.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR8 TO
##
## Ends in an error in state: 1696.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING CONR9 TO
##
## Ends in an error in state: 1694.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA STRING EQ TO
##
## Ends in an error in state: 1692.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO BRA TO
##
## Ends in an error in state: 1520.
##
## prim -> BRA . revexprlist KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . EQ KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINL9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . BINR9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONL9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR0 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR1 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR2 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR3 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR4 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR5 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR6 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR7 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR8 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . CONR9 expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . EQ expr KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr BINR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONL9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR0 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR1 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR2 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR3 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR4 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR5 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR6 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR7 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR8 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr CONR9 KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . expr EQ KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## prim -> BRA . ALT revcases ALT KET [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO FUN ALT TO
##
## Ends in an error in state: 1517.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 1518.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO FUN TO
##
## Ends in an error in state: 1516.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO ID ALT TO
##
## Ends in an error in state: 911.
##
## revcases -> revcases ALT . case [ KET ALT ]
##
## The known suffix of the stack is as follows:
## revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 4527.
##
## phrase -> topexpr . END [ # ]
## phrase -> topexpr . EOF [ # ]
## phrase -> topexpr . SEMI [ # ]
##
## The known suffix of the stack is as follows:
## topexpr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO IF STRING THEN STRING ELSE TO
##
## Ends in an error in state: 1514.
##
## topexpr -> IF expr THEN expr ELSE . topexpr [ KET ALT ]
##
## The known suffix of the stack is as follows:
## IF expr THEN expr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO IF STRING THEN TO
##
## Ends in an error in state: 1188.
##
## topexpr -> IF expr THEN . expr ELSE topexpr [ KET ALT ]
##
## The known suffix of the stack is as follows:
## IF expr THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO IF TO
##
## Ends in an error in state: 922.
##
## topexpr -> IF . expr THEN expr ELSE topexpr [ KET ALT ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 4163.
##
## revcases -> revcases . ALT case [ KET ALT ]
## topexpr -> LAM BRA revcases . KET [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LAM BRA revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO LAM BRA STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 909.
##
## revcases -> revcases . ALT case [ KET ALT ]
## topexpr -> LAM BRA revcases . KET [ KET ALT ]
##
## The known suffix of the stack is as follows:
## LAM BRA revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO LAM BRA TO
##
## Ends in an error in state: 905.
##
## nonempty_list(simplex) -> BRA . revexprlist KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET [ TO ]
## nonempty_list(simplex) -> BRA . revexprlist KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET nonempty_list(simplex) [ TO ]
## topexpr -> LAM BRA . revcases KET [ KET ALT ]
##
## The known suffix of the stack is as follows:
## LAM BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO LAM STRING TO TO
##
## Ends in an error in state: 921.
##
## topexpr -> LAM nonempty_list(simplex) TO . topexpr [ KET ALT ]
##
## The known suffix of the stack is as follows:
## LAM nonempty_list(simplex) TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO LAM TO
##
## Ends in an error in state: 904.
##
## topexpr -> LAM . nonempty_list(simplex) TO topexpr [ KET ALT ]
## topexpr -> LAM . BRA revcases KET [ KET ALT ]
##
## The known suffix of the stack is as follows:
## LAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO LET ID EQ ID IN TO
##
## Ends in an error in state: 903.
##
## topexpr -> LET revdefs IN . topexpr [ KET ALT ]
##
## The known suffix of the stack is as follows:
## LET revdefs IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO LET ID EQ LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 902.
##
## revdefs -> revdefs . SEMI def [ SEMI IN ]
## topexpr -> LET revdefs . IN topexpr [ KET ALT ]
##
## The known suffix of the stack is as follows:
## LET revdefs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO LET TO
##
## Ends in an error in state: 901.
##
## topexpr -> LET . revdefs IN topexpr [ KET ALT ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL0 TO
##
## Ends in an error in state: 1861.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL1 TO
##
## Ends in an error in state: 1853.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL2 TO
##
## Ends in an error in state: 1845.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL3 TO
##
## Ends in an error in state: 1837.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL4 TO
##
## Ends in an error in state: 1829.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL5 TO
##
## Ends in an error in state: 1821.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL6 TO
##
## Ends in an error in state: 1813.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL7 TO
##
## Ends in an error in state: 1805.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL8 TO
##
## Ends in an error in state: 1797.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINL9 TO
##
## Ends in an error in state: 1789.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR0 TO
##
## Ends in an error in state: 1859.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR1 TO
##
## Ends in an error in state: 1851.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR2 TO
##
## Ends in an error in state: 1843.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR3 TO
##
## Ends in an error in state: 1835.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR4 TO
##
## Ends in an error in state: 1827.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR5 TO
##
## Ends in an error in state: 1819.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR6 TO
##
## Ends in an error in state: 1811.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR7 TO
##
## Ends in an error in state: 1803.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR8 TO
##
## Ends in an error in state: 1795.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING BINR9 TO
##
## Ends in an error in state: 1787.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL0 TO
##
## Ends in an error in state: 1857.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL1 TO
##
## Ends in an error in state: 1849.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL2 TO
##
## Ends in an error in state: 1841.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL3 TO
##
## Ends in an error in state: 1833.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL4 TO
##
## Ends in an error in state: 1825.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL5 TO
##
## Ends in an error in state: 1817.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL6 TO
##
## Ends in an error in state: 1809.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL7 TO
##
## Ends in an error in state: 1801.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL8 TO
##
## Ends in an error in state: 1793.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONL9 TO
##
## Ends in an error in state: 1783.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR0 TO
##
## Ends in an error in state: 1855.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR1 TO
##
## Ends in an error in state: 1847.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR2 TO
##
## Ends in an error in state: 1839.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR3 TO
##
## Ends in an error in state: 1831.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR4 TO
##
## Ends in an error in state: 1823.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR5 TO
##
## Ends in an error in state: 1815.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR6 TO
##
## Ends in an error in state: 1807.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR7 TO
##
## Ends in an error in state: 1799.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR8 TO
##
## Ends in an error in state: 1791.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING CONR9 TO
##
## Ends in an error in state: 1781.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING EQ TO
##
## Ends in an error in state: 1779.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO STRING TO
##
## Ends in an error in state: 1785.
##
## app -> app . prim [ STRING NUM KET ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
## term -> app . [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ALT ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA STRING TO TO
##
## Ends in an error in state: 898.
##
## case -> term TO . topexpr [ KET ALT ]
##
## The known suffix of the stack is as follows:
## term TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM BRA TO
##
## Ends in an error in state: 4162.
##
## nonempty_list(simplex) -> BRA . revexprlist KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET [ TO ]
## nonempty_list(simplex) -> BRA . revexprlist KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET nonempty_list(simplex) [ TO ]
## topexpr -> LAM BRA . revcases KET [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LAM BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM ID THEN
##
## Ends in an error in state: 151.
##
## nonempty_list(simplex) -> id . [ TO ]
## nonempty_list(simplex) -> id . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM NUM THEN
##
## Ends in an error in state: 145.
##
## nonempty_list(simplex) -> NUM . [ TO ]
## nonempty_list(simplex) -> NUM . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## NUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING BRA TO
##
## Ends in an error in state: 147.
##
## nonempty_list(simplex) -> BRA . revexprlist KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET [ TO ]
## nonempty_list(simplex) -> BRA . revexprlist KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING THEN
##
## Ends in an error in state: 144.
##
## nonempty_list(simplex) -> STRING . [ TO ]
## nonempty_list(simplex) -> STRING . nonempty_list(simplex) [ TO ]
##
## The known suffix of the stack is as follows:
## STRING
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 2858.
##
## prim -> BRA ALT revcases ALT . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 2857.
##
## prim -> BRA ALT revcases . ALT KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA ALT TO
##
## Ends in an error in state: 2856.
##
## prim -> BRA ALT . revcases ALT KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL0 TO
##
## Ends in an error in state: 2852.
##
## prim -> BRA BINL0 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL0 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL1 TO
##
## Ends in an error in state: 2848.
##
## prim -> BRA BINL1 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL1 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL2 TO
##
## Ends in an error in state: 2844.
##
## prim -> BRA BINL2 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL2 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL3 TO
##
## Ends in an error in state: 2840.
##
## prim -> BRA BINL3 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL3 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL4 TO
##
## Ends in an error in state: 2836.
##
## prim -> BRA BINL4 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL4 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL5 TO
##
## Ends in an error in state: 2832.
##
## prim -> BRA BINL5 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL5 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL6 TO
##
## Ends in an error in state: 2828.
##
## prim -> BRA BINL6 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL6 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL7 TO
##
## Ends in an error in state: 2824.
##
## prim -> BRA BINL7 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL7 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL8 TO
##
## Ends in an error in state: 2820.
##
## prim -> BRA BINL8 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL8 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINL9 TO
##
## Ends in an error in state: 2816.
##
## prim -> BRA BINL9 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL9 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR0 TO
##
## Ends in an error in state: 2812.
##
## prim -> BRA BINR0 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR0 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR1 TO
##
## Ends in an error in state: 2808.
##
## prim -> BRA BINR1 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR1 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR2 TO
##
## Ends in an error in state: 2804.
##
## prim -> BRA BINR2 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR2 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR3 TO
##
## Ends in an error in state: 2800.
##
## prim -> BRA BINR3 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR3 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR4 TO
##
## Ends in an error in state: 2796.
##
## prim -> BRA BINR4 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR4 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR5 TO
##
## Ends in an error in state: 2792.
##
## prim -> BRA BINR5 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR5 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR6 TO
##
## Ends in an error in state: 2788.
##
## prim -> BRA BINR6 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR6 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR7 TO
##
## Ends in an error in state: 2784.
##
## prim -> BRA BINR7 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR7 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR8 TO
##
## Ends in an error in state: 2780.
##
## prim -> BRA BINR8 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR8 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA BINR9 TO
##
## Ends in an error in state: 2776.
##
## prim -> BRA BINR9 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR9 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL0 TO
##
## Ends in an error in state: 2772.
##
## prim -> BRA CONL0 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL0 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL1 TO
##
## Ends in an error in state: 2768.
##
## prim -> BRA CONL1 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL1 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL2 TO
##
## Ends in an error in state: 2764.
##
## prim -> BRA CONL2 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL2 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL3 TO
##
## Ends in an error in state: 2760.
##
## prim -> BRA CONL3 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL3 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL4 TO
##
## Ends in an error in state: 2756.
##
## prim -> BRA CONL4 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL4 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL5 TO
##
## Ends in an error in state: 2752.
##
## prim -> BRA CONL5 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL5 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL6 TO
##
## Ends in an error in state: 2748.
##
## prim -> BRA CONL6 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL6 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL7 TO
##
## Ends in an error in state: 2744.
##
## prim -> BRA CONL7 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL7 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL8 TO
##
## Ends in an error in state: 2740.
##
## prim -> BRA CONL8 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL8 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONL9 TO
##
## Ends in an error in state: 2736.
##
## prim -> BRA CONL9 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL9 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR0 TO
##
## Ends in an error in state: 2732.
##
## prim -> BRA CONR0 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR0 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR1 TO
##
## Ends in an error in state: 2728.
##
## prim -> BRA CONR1 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR1 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR2 TO
##
## Ends in an error in state: 2724.
##
## prim -> BRA CONR2 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR2 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR3 TO
##
## Ends in an error in state: 2720.
##
## prim -> BRA CONR3 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR3 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR4 TO
##
## Ends in an error in state: 2716.
##
## prim -> BRA CONR4 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR4 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR5 TO
##
## Ends in an error in state: 2712.
##
## prim -> BRA CONR5 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR5 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR6 TO
##
## Ends in an error in state: 2708.
##
## prim -> BRA CONR6 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR6 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR7 TO
##
## Ends in an error in state: 2704.
##
## prim -> BRA CONR7 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR7 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR8 TO
##
## Ends in an error in state: 2700.
##
## prim -> BRA CONR8 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR8 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA CONR9 TO
##
## Ends in an error in state: 2696.
##
## prim -> BRA CONR9 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR9 . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA EQ TO
##
## Ends in an error in state: 2692.
##
## prim -> BRA EQ . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA EQ . expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL0 TO
##
## Ends in an error in state: 2943.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL1 TO
##
## Ends in an error in state: 2941.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL2 TO
##
## Ends in an error in state: 2939.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL3 TO
##
## Ends in an error in state: 2937.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL4 TO
##
## Ends in an error in state: 2935.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL5 TO
##
## Ends in an error in state: 2933.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL6 TO
##
## Ends in an error in state: 2931.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL7 TO
##
## Ends in an error in state: 2929.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL8 TO
##
## Ends in an error in state: 2927.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINL9 TO
##
## Ends in an error in state: 2925.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR0 TO
##
## Ends in an error in state: 2923.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR1 TO
##
## Ends in an error in state: 2921.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR2 TO
##
## Ends in an error in state: 2919.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR3 TO
##
## Ends in an error in state: 2917.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR4 TO
##
## Ends in an error in state: 2915.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR5 TO
##
## Ends in an error in state: 2913.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR6 TO
##
## Ends in an error in state: 2911.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR7 TO
##
## Ends in an error in state: 2909.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR8 TO
##
## Ends in an error in state: 2907.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING BINR9 TO
##
## Ends in an error in state: 2905.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL0 TO
##
## Ends in an error in state: 2903.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL1 TO
##
## Ends in an error in state: 2901.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL2 TO
##
## Ends in an error in state: 2899.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL3 TO
##
## Ends in an error in state: 2897.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL4 TO
##
## Ends in an error in state: 2895.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL5 TO
##
## Ends in an error in state: 2893.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL6 TO
##
## Ends in an error in state: 2891.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL7 TO
##
## Ends in an error in state: 2889.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL8 TO
##
## Ends in an error in state: 2887.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONL9 TO
##
## Ends in an error in state: 2885.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR0 TO
##
## Ends in an error in state: 2883.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR1 TO
##
## Ends in an error in state: 2881.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR2 TO
##
## Ends in an error in state: 2879.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR3 TO
##
## Ends in an error in state: 2877.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR4 TO
##
## Ends in an error in state: 2875.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR5 TO
##
## Ends in an error in state: 2873.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR6 TO
##
## Ends in an error in state: 2871.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR7 TO
##
## Ends in an error in state: 2869.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR8 TO
##
## Ends in an error in state: 2867.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING CONR9 TO
##
## Ends in an error in state: 2865.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA STRING EQ TO
##
## Ends in an error in state: 2863.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ BRA TO
##
## Ends in an error in state: 2691.
##
## prim -> BRA . revexprlist KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ expr KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL0 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL1 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL2 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL3 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL4 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL5 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL6 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL7 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL8 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL9 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR0 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR1 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR2 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR3 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR4 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR5 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR6 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR7 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR8 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR9 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL0 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL1 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL2 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL3 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL4 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL5 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL6 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL7 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL8 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL9 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR0 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR1 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR2 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR3 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR4 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR5 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR6 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR7 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR8 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR9 KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr EQ KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . ALT revcases ALT KET [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ FUN ALT TO
##
## Ends in an error in state: 2688.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 2689.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ FUN TO
##
## Ends in an error in state: 2687.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ ID SEMI TO
##
## Ends in an error in state: 134.
##
## revdefs -> revdefs SEMI . def [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## revdefs SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ IF STRING THEN STRING ELSE TO
##
## Ends in an error in state: 2685.
##
## topexpr -> IF expr THEN expr ELSE . topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## IF expr THEN expr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ IF STRING THEN TO
##
## Ends in an error in state: 2683.
##
## topexpr -> IF expr THEN . expr ELSE topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## IF expr THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ IF TO
##
## Ends in an error in state: 2681.
##
## topexpr -> IF . expr THEN expr ELSE topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 4160.
##
## revdefs -> revdefs . SEMI def [ SEMI IN ]
## topexpr -> LET revdefs . IN topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LET revdefs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ LAM BRA STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 2677.
##
## revcases -> revcases . ALT case [ KET ALT ]
## topexpr -> LAM BRA revcases . KET [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## LAM BRA revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ LAM BRA TO
##
## Ends in an error in state: 2676.
##
## nonempty_list(simplex) -> BRA . revexprlist KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET [ TO ]
## nonempty_list(simplex) -> BRA . revexprlist KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET nonempty_list(simplex) [ TO ]
## topexpr -> LAM BRA . revcases KET [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## LAM BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ LAM STRING TO TO
##
## Ends in an error in state: 2680.
##
## topexpr -> LAM nonempty_list(simplex) TO . topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## LAM nonempty_list(simplex) TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ LAM TO
##
## Ends in an error in state: 143.
##
## topexpr -> LAM . nonempty_list(simplex) TO topexpr [ SEMI IN ]
## topexpr -> LAM . BRA revcases KET [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## LAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ LET ID EQ ID IN TO
##
## Ends in an error in state: 142.
##
## topexpr -> LET revdefs IN . topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## LET revdefs IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ LET ID EQ LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 141.
##
## revdefs -> revdefs . SEMI def [ SEMI IN ]
## topexpr -> LET revdefs . IN topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## LET revdefs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ LET TO
##
## Ends in an error in state: 140.
##
## topexpr -> LET . revdefs IN topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL0 TO
##
## Ends in an error in state: 3032.
##
## expr -> expr BINL0 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL1 TO
##
## Ends in an error in state: 3024.
##
## expr -> expr BINL1 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL2 TO
##
## Ends in an error in state: 3016.
##
## expr -> expr BINL2 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL3 TO
##
## Ends in an error in state: 3008.
##
## expr -> expr BINL3 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL4 TO
##
## Ends in an error in state: 3000.
##
## expr -> expr BINL4 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL5 TO
##
## Ends in an error in state: 2992.
##
## expr -> expr BINL5 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL6 TO
##
## Ends in an error in state: 2984.
##
## expr -> expr BINL6 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL7 TO
##
## Ends in an error in state: 2976.
##
## expr -> expr BINL7 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL8 TO
##
## Ends in an error in state: 2968.
##
## expr -> expr BINL8 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINL9 TO
##
## Ends in an error in state: 2960.
##
## expr -> expr BINL9 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR0 TO
##
## Ends in an error in state: 3030.
##
## expr -> expr BINR0 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR1 TO
##
## Ends in an error in state: 3022.
##
## expr -> expr BINR1 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR2 TO
##
## Ends in an error in state: 3014.
##
## expr -> expr BINR2 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR3 TO
##
## Ends in an error in state: 3006.
##
## expr -> expr BINR3 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR4 TO
##
## Ends in an error in state: 2998.
##
## expr -> expr BINR4 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR5 TO
##
## Ends in an error in state: 2990.
##
## expr -> expr BINR5 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR6 TO
##
## Ends in an error in state: 2982.
##
## expr -> expr BINR6 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR7 TO
##
## Ends in an error in state: 2974.
##
## expr -> expr BINR7 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR8 TO
##
## Ends in an error in state: 2966.
##
## expr -> expr BINR8 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING BINR9 TO
##
## Ends in an error in state: 2958.
##
## expr -> expr BINR9 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL0 TO
##
## Ends in an error in state: 3028.
##
## expr -> expr CONL0 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL1 TO
##
## Ends in an error in state: 3020.
##
## expr -> expr CONL1 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL2 TO
##
## Ends in an error in state: 3012.
##
## expr -> expr CONL2 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL3 TO
##
## Ends in an error in state: 3004.
##
## expr -> expr CONL3 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL4 TO
##
## Ends in an error in state: 2996.
##
## expr -> expr CONL4 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL5 TO
##
## Ends in an error in state: 2988.
##
## expr -> expr CONL5 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL6 TO
##
## Ends in an error in state: 2980.
##
## expr -> expr CONL6 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL7 TO
##
## Ends in an error in state: 2972.
##
## expr -> expr CONL7 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL8 TO
##
## Ends in an error in state: 2964.
##
## expr -> expr CONL8 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONL9 TO
##
## Ends in an error in state: 2954.
##
## expr -> expr CONL9 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR0 TO
##
## Ends in an error in state: 3026.
##
## expr -> expr CONR0 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR1 TO
##
## Ends in an error in state: 3018.
##
## expr -> expr CONR1 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR2 TO
##
## Ends in an error in state: 3010.
##
## expr -> expr CONR2 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR3 TO
##
## Ends in an error in state: 3002.
##
## expr -> expr CONR3 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR4 TO
##
## Ends in an error in state: 2994.
##
## expr -> expr CONR4 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR5 TO
##
## Ends in an error in state: 2986.
##
## expr -> expr CONR5 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR6 TO
##
## Ends in an error in state: 2978.
##
## expr -> expr CONR6 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR7 TO
##
## Ends in an error in state: 2970.
##
## expr -> expr CONR7 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR8 TO
##
## Ends in an error in state: 2962.
##
## expr -> expr CONR8 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING CONR9 TO
##
## Ends in an error in state: 2952.
##
## expr -> expr CONR9 . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING EQ TO
##
## Ends in an error in state: 2950.
##
## expr -> expr EQ . expr [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ STRING TO
##
## Ends in an error in state: 2956.
##
## app -> app . prim [ STRING SEMI NUM IN ID FUN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## term -> app . [ SEMI IN EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID EQ TO
##
## Ends in an error in state: 137.
##
## def -> id list(simplex) EQ . topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## id list(simplex) EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET ID TO
##
## Ends in an error in state: 135.
##
## def -> id . list(simplex) EQ topexpr [ SEMI IN ]
##
## The known suffix of the stack is as follows:
## id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO LET TO
##
## Ends in an error in state: 4159.
##
## topexpr -> LET . revdefs IN topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM STRING TO TO
##
## Ends in an error in state: 4166.
##
## topexpr -> LAM nonempty_list(simplex) TO . topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LAM nonempty_list(simplex) TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LAM TO
##
## Ends in an error in state: 4161.
##
## topexpr -> LAM . nonempty_list(simplex) TO topexpr [ SEMI EOF END ]
## topexpr -> LAM . BRA revcases KET [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL0 KET TO
##
## Ends in an error in state: 3781.
##
## list(simplex) -> BRA BINL0 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL0 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL0 TO
##
## Ends in an error in state: 3780.
##
## list(simplex) -> BRA BINL0 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL1 KET TO
##
## Ends in an error in state: 3778.
##
## list(simplex) -> BRA BINL1 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL1 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL1 TO
##
## Ends in an error in state: 3777.
##
## list(simplex) -> BRA BINL1 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL2 KET TO
##
## Ends in an error in state: 3775.
##
## list(simplex) -> BRA BINL2 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL2 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL2 TO
##
## Ends in an error in state: 3774.
##
## list(simplex) -> BRA BINL2 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL3 KET TO
##
## Ends in an error in state: 3772.
##
## list(simplex) -> BRA BINL3 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL3 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL3 TO
##
## Ends in an error in state: 3771.
##
## list(simplex) -> BRA BINL3 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL4 KET TO
##
## Ends in an error in state: 3769.
##
## list(simplex) -> BRA BINL4 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL4 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL4 TO
##
## Ends in an error in state: 3768.
##
## list(simplex) -> BRA BINL4 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL5 KET TO
##
## Ends in an error in state: 3766.
##
## list(simplex) -> BRA BINL5 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL5 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL5 TO
##
## Ends in an error in state: 3765.
##
## list(simplex) -> BRA BINL5 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL6 KET TO
##
## Ends in an error in state: 3763.
##
## list(simplex) -> BRA BINL6 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL6 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL6 TO
##
## Ends in an error in state: 3762.
##
## list(simplex) -> BRA BINL6 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL7 KET TO
##
## Ends in an error in state: 3760.
##
## list(simplex) -> BRA BINL7 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL7 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL7 TO
##
## Ends in an error in state: 3759.
##
## list(simplex) -> BRA BINL7 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL8 KET TO
##
## Ends in an error in state: 3757.
##
## list(simplex) -> BRA BINL8 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL8 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL8 TO
##
## Ends in an error in state: 3756.
##
## list(simplex) -> BRA BINL8 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL9 KET TO
##
## Ends in an error in state: 3754.
##
## list(simplex) -> BRA BINL9 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL9 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINL9 TO
##
## Ends in an error in state: 3753.
##
## list(simplex) -> BRA BINL9 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR0 KET TO
##
## Ends in an error in state: 3751.
##
## list(simplex) -> BRA BINR0 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR0 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR0 TO
##
## Ends in an error in state: 3750.
##
## list(simplex) -> BRA BINR0 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR1 KET TO
##
## Ends in an error in state: 3748.
##
## list(simplex) -> BRA BINR1 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR1 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR1 TO
##
## Ends in an error in state: 3747.
##
## list(simplex) -> BRA BINR1 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR2 KET TO
##
## Ends in an error in state: 3745.
##
## list(simplex) -> BRA BINR2 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR2 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR2 TO
##
## Ends in an error in state: 3744.
##
## list(simplex) -> BRA BINR2 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR3 KET TO
##
## Ends in an error in state: 3742.
##
## list(simplex) -> BRA BINR3 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR3 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR3 TO
##
## Ends in an error in state: 3741.
##
## list(simplex) -> BRA BINR3 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR4 KET TO
##
## Ends in an error in state: 3739.
##
## list(simplex) -> BRA BINR4 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR4 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR4 TO
##
## Ends in an error in state: 3738.
##
## list(simplex) -> BRA BINR4 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR5 KET TO
##
## Ends in an error in state: 3736.
##
## list(simplex) -> BRA BINR5 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR5 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR5 TO
##
## Ends in an error in state: 3735.
##
## list(simplex) -> BRA BINR5 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR6 KET TO
##
## Ends in an error in state: 3733.
##
## list(simplex) -> BRA BINR6 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR6 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR6 TO
##
## Ends in an error in state: 3732.
##
## list(simplex) -> BRA BINR6 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR7 KET TO
##
## Ends in an error in state: 3730.
##
## list(simplex) -> BRA BINR7 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR7 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR7 TO
##
## Ends in an error in state: 3729.
##
## list(simplex) -> BRA BINR7 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR8 KET TO
##
## Ends in an error in state: 3727.
##
## list(simplex) -> BRA BINR8 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR8 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR8 TO
##
## Ends in an error in state: 3726.
##
## list(simplex) -> BRA BINR8 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR9 KET TO
##
## Ends in an error in state: 3724.
##
## list(simplex) -> BRA BINR9 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR9 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA BINR9 TO
##
## Ends in an error in state: 3723.
##
## list(simplex) -> BRA BINR9 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL0 KET TO
##
## Ends in an error in state: 3721.
##
## list(simplex) -> BRA CONL0 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL0 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL0 TO
##
## Ends in an error in state: 3720.
##
## list(simplex) -> BRA CONL0 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL1 KET TO
##
## Ends in an error in state: 3718.
##
## list(simplex) -> BRA CONL1 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL1 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL1 TO
##
## Ends in an error in state: 3717.
##
## list(simplex) -> BRA CONL1 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL2 KET TO
##
## Ends in an error in state: 3715.
##
## list(simplex) -> BRA CONL2 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL2 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL2 TO
##
## Ends in an error in state: 3714.
##
## list(simplex) -> BRA CONL2 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL3 KET TO
##
## Ends in an error in state: 3712.
##
## list(simplex) -> BRA CONL3 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL3 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL3 TO
##
## Ends in an error in state: 3711.
##
## list(simplex) -> BRA CONL3 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL4 KET TO
##
## Ends in an error in state: 3709.
##
## list(simplex) -> BRA CONL4 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL4 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL4 TO
##
## Ends in an error in state: 3708.
##
## list(simplex) -> BRA CONL4 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL5 KET TO
##
## Ends in an error in state: 3706.
##
## list(simplex) -> BRA CONL5 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL5 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL5 TO
##
## Ends in an error in state: 3705.
##
## list(simplex) -> BRA CONL5 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL6 KET TO
##
## Ends in an error in state: 3703.
##
## list(simplex) -> BRA CONL6 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL6 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL6 TO
##
## Ends in an error in state: 3702.
##
## list(simplex) -> BRA CONL6 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL7 KET TO
##
## Ends in an error in state: 3700.
##
## list(simplex) -> BRA CONL7 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL7 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL7 TO
##
## Ends in an error in state: 3699.
##
## list(simplex) -> BRA CONL7 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL8 KET TO
##
## Ends in an error in state: 3697.
##
## list(simplex) -> BRA CONL8 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL8 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL8 TO
##
## Ends in an error in state: 3696.
##
## list(simplex) -> BRA CONL8 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL9 KET TO
##
## Ends in an error in state: 3694.
##
## list(simplex) -> BRA CONL9 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL9 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONL9 TO
##
## Ends in an error in state: 3693.
##
## list(simplex) -> BRA CONL9 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR0 KET TO
##
## Ends in an error in state: 3691.
##
## list(simplex) -> BRA CONR0 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR0 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR0 TO
##
## Ends in an error in state: 3690.
##
## list(simplex) -> BRA CONR0 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR1 KET TO
##
## Ends in an error in state: 3688.
##
## list(simplex) -> BRA CONR1 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR1 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR1 TO
##
## Ends in an error in state: 3687.
##
## list(simplex) -> BRA CONR1 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR2 KET TO
##
## Ends in an error in state: 3685.
##
## list(simplex) -> BRA CONR2 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR2 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR2 TO
##
## Ends in an error in state: 3684.
##
## list(simplex) -> BRA CONR2 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR3 KET TO
##
## Ends in an error in state: 3682.
##
## list(simplex) -> BRA CONR3 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR3 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR3 TO
##
## Ends in an error in state: 3681.
##
## list(simplex) -> BRA CONR3 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR4 KET TO
##
## Ends in an error in state: 3679.
##
## list(simplex) -> BRA CONR4 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR4 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR4 TO
##
## Ends in an error in state: 3678.
##
## list(simplex) -> BRA CONR4 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR5 KET TO
##
## Ends in an error in state: 3676.
##
## list(simplex) -> BRA CONR5 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR5 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR5 TO
##
## Ends in an error in state: 3675.
##
## list(simplex) -> BRA CONR5 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR6 KET TO
##
## Ends in an error in state: 3673.
##
## list(simplex) -> BRA CONR6 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR6 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR6 TO
##
## Ends in an error in state: 3672.
##
## list(simplex) -> BRA CONR6 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR7 KET TO
##
## Ends in an error in state: 3670.
##
## list(simplex) -> BRA CONR7 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR7 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR7 TO
##
## Ends in an error in state: 3669.
##
## list(simplex) -> BRA CONR7 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR8 KET TO
##
## Ends in an error in state: 3667.
##
## list(simplex) -> BRA CONR8 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR8 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR8 TO
##
## Ends in an error in state: 3666.
##
## list(simplex) -> BRA CONR8 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR9 KET TO
##
## Ends in an error in state: 3664.
##
## list(simplex) -> BRA CONR9 KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR9 KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA CONR9 TO
##
## Ends in an error in state: 3663.
##
## list(simplex) -> BRA CONR9 . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA EQ KET TO
##
## Ends in an error in state: 3661.
##
## list(simplex) -> BRA EQ KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA EQ KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA EQ TO
##
## Ends in an error in state: 3660.
##
## list(simplex) -> BRA EQ . KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA KET TO
##
## Ends in an error in state: 3784.
##
## list(simplex) -> BRA revexprlist KET . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA revexprlist KET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID BRA TO
##
## Ends in an error in state: 108.
##
## list(simplex) -> BRA . revexprlist KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL0 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL1 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL2 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL3 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL4 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL5 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL6 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL7 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL8 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINL9 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR0 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR1 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR2 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR3 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR4 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR5 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR6 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR7 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR8 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . BINR9 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL0 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL1 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL2 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL3 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL4 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL5 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL6 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL7 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL8 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONL9 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR0 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR1 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR2 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR3 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR4 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR5 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR6 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR7 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR8 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . CONR9 KET list(simplex) [ EQ ]
## list(simplex) -> BRA . EQ KET list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA ALT STRING TO ID ALT TO
##
## Ends in an error in state: 3978.
##
## prim -> BRA ALT revcases ALT . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases ALT . case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA ALT STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3977.
##
## prim -> BRA ALT revcases . ALT KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ ALT ]
##
## The known suffix of the stack is as follows:
## BRA ALT revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA ALT TO
##
## Ends in an error in state: 3976.
##
## prim -> BRA ALT . revcases ALT KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA ALT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL0 TO
##
## Ends in an error in state: 3972.
##
## prim -> BRA BINL0 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL0 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL1 TO
##
## Ends in an error in state: 3968.
##
## prim -> BRA BINL1 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL1 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL2 TO
##
## Ends in an error in state: 3964.
##
## prim -> BRA BINL2 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL2 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL3 TO
##
## Ends in an error in state: 3960.
##
## prim -> BRA BINL3 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL3 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL4 TO
##
## Ends in an error in state: 3956.
##
## prim -> BRA BINL4 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL4 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL5 TO
##
## Ends in an error in state: 3952.
##
## prim -> BRA BINL5 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL5 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL6 TO
##
## Ends in an error in state: 3948.
##
## prim -> BRA BINL6 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL6 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL7 TO
##
## Ends in an error in state: 3944.
##
## prim -> BRA BINL7 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL7 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL8 TO
##
## Ends in an error in state: 3940.
##
## prim -> BRA BINL8 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL8 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINL9 TO
##
## Ends in an error in state: 3936.
##
## prim -> BRA BINL9 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINL9 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR0 TO
##
## Ends in an error in state: 3932.
##
## prim -> BRA BINR0 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR0 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR1 TO
##
## Ends in an error in state: 3928.
##
## prim -> BRA BINR1 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR1 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR2 TO
##
## Ends in an error in state: 3924.
##
## prim -> BRA BINR2 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR2 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR3 TO
##
## Ends in an error in state: 3920.
##
## prim -> BRA BINR3 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR3 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR4 TO
##
## Ends in an error in state: 3916.
##
## prim -> BRA BINR4 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR4 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR5 TO
##
## Ends in an error in state: 3912.
##
## prim -> BRA BINR5 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR5 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR6 TO
##
## Ends in an error in state: 3908.
##
## prim -> BRA BINR6 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR6 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR7 TO
##
## Ends in an error in state: 3904.
##
## prim -> BRA BINR7 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR7 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR8 TO
##
## Ends in an error in state: 3900.
##
## prim -> BRA BINR8 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR8 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA BINR9 TO
##
## Ends in an error in state: 3896.
##
## prim -> BRA BINR9 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA BINR9 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL0 TO
##
## Ends in an error in state: 3892.
##
## prim -> BRA CONL0 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL0 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL1 TO
##
## Ends in an error in state: 3888.
##
## prim -> BRA CONL1 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL1 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL2 TO
##
## Ends in an error in state: 3884.
##
## prim -> BRA CONL2 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL2 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL3 TO
##
## Ends in an error in state: 3880.
##
## prim -> BRA CONL3 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL3 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL4 TO
##
## Ends in an error in state: 3876.
##
## prim -> BRA CONL4 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL4 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL5 TO
##
## Ends in an error in state: 3872.
##
## prim -> BRA CONL5 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL5 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL6 TO
##
## Ends in an error in state: 3868.
##
## prim -> BRA CONL6 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL6 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL7 TO
##
## Ends in an error in state: 3864.
##
## prim -> BRA CONL7 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL7 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL8 TO
##
## Ends in an error in state: 3860.
##
## prim -> BRA CONL8 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL8 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONL9 TO
##
## Ends in an error in state: 3856.
##
## prim -> BRA CONL9 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONL9 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR0 TO
##
## Ends in an error in state: 3852.
##
## prim -> BRA CONR0 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR0 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR1 TO
##
## Ends in an error in state: 3848.
##
## prim -> BRA CONR1 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR1 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR2 TO
##
## Ends in an error in state: 3844.
##
## prim -> BRA CONR2 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR2 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR3 TO
##
## Ends in an error in state: 3840.
##
## prim -> BRA CONR3 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR3 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR4 TO
##
## Ends in an error in state: 3836.
##
## prim -> BRA CONR4 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR4 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR5 TO
##
## Ends in an error in state: 3832.
##
## prim -> BRA CONR5 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR5 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR6 TO
##
## Ends in an error in state: 3828.
##
## prim -> BRA CONR6 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR6 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR7 TO
##
## Ends in an error in state: 3824.
##
## prim -> BRA CONR7 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR7 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR8 TO
##
## Ends in an error in state: 3820.
##
## prim -> BRA CONR8 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR8 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA CONR9 TO
##
## Ends in an error in state: 3816.
##
## prim -> BRA CONR9 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA CONR9 . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA EQ TO
##
## Ends in an error in state: 3812.
##
## prim -> BRA EQ . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA EQ . expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL0 TO
##
## Ends in an error in state: 4063.
##
## expr -> expr BINL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL0 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL1 TO
##
## Ends in an error in state: 4061.
##
## expr -> expr BINL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL1 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL2 TO
##
## Ends in an error in state: 4059.
##
## expr -> expr BINL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL2 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL3 TO
##
## Ends in an error in state: 4057.
##
## expr -> expr BINL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL3 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL4 TO
##
## Ends in an error in state: 4055.
##
## expr -> expr BINL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL4 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL5 TO
##
## Ends in an error in state: 4053.
##
## expr -> expr BINL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL5 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL6 TO
##
## Ends in an error in state: 4051.
##
## expr -> expr BINL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL6 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL7 TO
##
## Ends in an error in state: 4049.
##
## expr -> expr BINL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL7 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL8 TO
##
## Ends in an error in state: 4047.
##
## expr -> expr BINL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL8 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINL9 TO
##
## Ends in an error in state: 4045.
##
## expr -> expr BINL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINL9 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR0 TO
##
## Ends in an error in state: 4043.
##
## expr -> expr BINR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR0 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR1 TO
##
## Ends in an error in state: 4041.
##
## expr -> expr BINR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR1 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR2 TO
##
## Ends in an error in state: 4039.
##
## expr -> expr BINR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR2 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR3 TO
##
## Ends in an error in state: 4037.
##
## expr -> expr BINR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR3 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR4 TO
##
## Ends in an error in state: 4035.
##
## expr -> expr BINR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR4 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR5 TO
##
## Ends in an error in state: 4033.
##
## expr -> expr BINR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR5 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR6 TO
##
## Ends in an error in state: 4031.
##
## expr -> expr BINR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR6 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR7 TO
##
## Ends in an error in state: 4029.
##
## expr -> expr BINR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR7 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR8 TO
##
## Ends in an error in state: 4027.
##
## expr -> expr BINR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR8 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING BINR9 TO
##
## Ends in an error in state: 4025.
##
## expr -> expr BINR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr BINR9 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL0 TO
##
## Ends in an error in state: 4023.
##
## expr -> expr CONL0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL0 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL1 TO
##
## Ends in an error in state: 4021.
##
## expr -> expr CONL1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL1 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL2 TO
##
## Ends in an error in state: 4019.
##
## expr -> expr CONL2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL2 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL3 TO
##
## Ends in an error in state: 4017.
##
## expr -> expr CONL3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL3 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL4 TO
##
## Ends in an error in state: 4015.
##
## expr -> expr CONL4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL4 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL5 TO
##
## Ends in an error in state: 4013.
##
## expr -> expr CONL5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL5 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL6 TO
##
## Ends in an error in state: 4011.
##
## expr -> expr CONL6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL6 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL7 TO
##
## Ends in an error in state: 4009.
##
## expr -> expr CONL7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL7 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL8 TO
##
## Ends in an error in state: 4007.
##
## expr -> expr CONL8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL8 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONL9 TO
##
## Ends in an error in state: 4005.
##
## expr -> expr CONL9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONL9 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR0 TO
##
## Ends in an error in state: 4003.
##
## expr -> expr CONR0 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR0 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR1 TO
##
## Ends in an error in state: 4001.
##
## expr -> expr CONR1 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR1 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR2 TO
##
## Ends in an error in state: 3999.
##
## expr -> expr CONR2 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR2 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR3 TO
##
## Ends in an error in state: 3997.
##
## expr -> expr CONR3 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR3 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR4 TO
##
## Ends in an error in state: 3995.
##
## expr -> expr CONR4 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR4 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR5 TO
##
## Ends in an error in state: 3993.
##
## expr -> expr CONR5 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR5 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR6 TO
##
## Ends in an error in state: 3991.
##
## expr -> expr CONR6 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR6 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR7 TO
##
## Ends in an error in state: 3989.
##
## expr -> expr CONR7 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR7 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR8 TO
##
## Ends in an error in state: 3987.
##
## expr -> expr CONR8 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR8 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING CONR9 TO
##
## Ends in an error in state: 3985.
##
## expr -> expr CONR9 . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr CONR9 . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA STRING EQ TO
##
## Ends in an error in state: 3983.
##
## expr -> expr EQ . expr [ KET EQ CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 COMMA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA expr EQ . KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ BRA TO
##
## Ends in an error in state: 3811.
##
## prim -> BRA . revexprlist KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL0 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL1 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL2 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL3 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL4 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL5 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL6 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL7 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL8 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINL9 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR0 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR1 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR2 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR3 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR4 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR5 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR6 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR7 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR8 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . BINR9 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL0 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL1 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL2 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL3 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL4 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL5 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL6 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL7 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL8 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONL9 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR0 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR1 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR2 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR3 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR4 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR5 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR6 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR7 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR8 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . CONR9 expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . EQ expr KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL0 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL1 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL2 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL3 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL4 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL5 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL6 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL7 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL8 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINL9 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR0 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR1 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR2 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR3 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR4 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR5 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR6 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR7 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR8 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr BINR9 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL0 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL1 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL2 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL3 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL4 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL5 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL6 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL7 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL8 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONL9 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR0 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR1 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR2 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR3 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR4 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR5 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR6 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR7 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR8 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr CONR9 KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . expr EQ KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## prim -> BRA . ALT revcases ALT KET [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ FUN ALT TO
##
## Ends in an error in state: 3808.
##
## prim -> FUN option(eoc) . revcases NUF [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ FUN STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3809.
##
## prim -> FUN option(eoc) revcases . NUF [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## revcases -> revcases . ALT case [ NUF ALT ]
##
## The known suffix of the stack is as follows:
## FUN option(eoc) revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ FUN TO
##
## Ends in an error in state: 3807.
##
## prim -> FUN . option(eoc) revcases NUF [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## FUN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ ID IN TO
##
## Ends in an error in state: 4158.
##
## topexpr -> LET revdefs IN . topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LET revdefs IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ ID SEMI TO
##
## Ends in an error in state: 104.
##
## revdefs -> revdefs SEMI . def [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## revdefs SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ IF STRING THEN STRING ELSE TO
##
## Ends in an error in state: 3805.
##
## topexpr -> IF expr THEN expr ELSE . topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## IF expr THEN expr ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ IF STRING THEN TO
##
## Ends in an error in state: 3803.
##
## topexpr -> IF expr THEN . expr ELSE topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## IF expr THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ IF TO
##
## Ends in an error in state: 3801.
##
## topexpr -> IF . expr THEN expr ELSE topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 103.
##
## phrase -> LET revdefs . END [ # ]
## phrase -> LET revdefs . EOF [ # ]
## revdefs -> revdefs . SEMI def [ SEMI IN EOF END ]
## topexpr -> LET revdefs . IN topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LET revdefs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ LAM BRA STRING TO LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3797.
##
## revcases -> revcases . ALT case [ KET ALT ]
## topexpr -> LAM BRA revcases . KET [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## LAM BRA revcases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ LAM BRA TO
##
## Ends in an error in state: 3796.
##
## nonempty_list(simplex) -> BRA . revexprlist KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET [ TO ]
## nonempty_list(simplex) -> BRA . revexprlist KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . BINR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONL9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR0 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR1 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR2 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR3 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR4 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR5 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR6 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR7 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR8 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . CONR9 KET nonempty_list(simplex) [ TO ]
## nonempty_list(simplex) -> BRA . EQ KET nonempty_list(simplex) [ TO ]
## topexpr -> LAM BRA . revcases KET [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## LAM BRA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ LAM STRING TO TO
##
## Ends in an error in state: 3800.
##
## topexpr -> LAM nonempty_list(simplex) TO . topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## LAM nonempty_list(simplex) TO
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ LAM TO
##
## Ends in an error in state: 3795.
##
## topexpr -> LAM . nonempty_list(simplex) TO topexpr [ SEMI IN EOF END ]
## topexpr -> LAM . BRA revcases KET [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## LAM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ LET ID EQ ID IN TO
##
## Ends in an error in state: 3794.
##
## topexpr -> LET revdefs IN . topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## LET revdefs IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ LET ID EQ LAM BRA STRING TO ID KET TO
##
## Ends in an error in state: 3793.
##
## revdefs -> revdefs . SEMI def [ SEMI IN ]
## topexpr -> LET revdefs . IN topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## LET revdefs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ LET TO
##
## Ends in an error in state: 3792.
##
## topexpr -> LET . revdefs IN topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL0 TO
##
## Ends in an error in state: 4152.
##
## expr -> expr BINL0 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL1 TO
##
## Ends in an error in state: 4144.
##
## expr -> expr BINL1 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL2 TO
##
## Ends in an error in state: 4136.
##
## expr -> expr BINL2 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL3 TO
##
## Ends in an error in state: 4128.
##
## expr -> expr BINL3 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL4 TO
##
## Ends in an error in state: 4120.
##
## expr -> expr BINL4 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL5 TO
##
## Ends in an error in state: 4112.
##
## expr -> expr BINL5 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL6 TO
##
## Ends in an error in state: 4104.
##
## expr -> expr BINL6 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL7 TO
##
## Ends in an error in state: 4096.
##
## expr -> expr BINL7 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL8 TO
##
## Ends in an error in state: 4088.
##
## expr -> expr BINL8 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINL9 TO
##
## Ends in an error in state: 4080.
##
## expr -> expr BINL9 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR0 TO
##
## Ends in an error in state: 4150.
##
## expr -> expr BINR0 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR1 TO
##
## Ends in an error in state: 4142.
##
## expr -> expr BINR1 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR2 TO
##
## Ends in an error in state: 4134.
##
## expr -> expr BINR2 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR3 TO
##
## Ends in an error in state: 4126.
##
## expr -> expr BINR3 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR4 TO
##
## Ends in an error in state: 4118.
##
## expr -> expr BINR4 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR5 TO
##
## Ends in an error in state: 4110.
##
## expr -> expr BINR5 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR6 TO
##
## Ends in an error in state: 4102.
##
## expr -> expr BINR6 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR7 TO
##
## Ends in an error in state: 4094.
##
## expr -> expr BINR7 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR8 TO
##
## Ends in an error in state: 4086.
##
## expr -> expr BINR8 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING BINR9 TO
##
## Ends in an error in state: 4078.
##
## expr -> expr BINR9 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL0 TO
##
## Ends in an error in state: 4148.
##
## expr -> expr CONL0 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL1 TO
##
## Ends in an error in state: 4140.
##
## expr -> expr CONL1 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL2 TO
##
## Ends in an error in state: 4132.
##
## expr -> expr CONL2 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL3 TO
##
## Ends in an error in state: 4124.
##
## expr -> expr CONL3 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL4 TO
##
## Ends in an error in state: 4116.
##
## expr -> expr CONL4 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL5 TO
##
## Ends in an error in state: 4108.
##
## expr -> expr CONL5 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL6 TO
##
## Ends in an error in state: 4100.
##
## expr -> expr CONL6 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL7 TO
##
## Ends in an error in state: 4092.
##
## expr -> expr CONL7 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL8 TO
##
## Ends in an error in state: 4084.
##
## expr -> expr CONL8 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONL9 TO
##
## Ends in an error in state: 4074.
##
## expr -> expr CONL9 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR0 TO
##
## Ends in an error in state: 4146.
##
## expr -> expr CONR0 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR1 TO
##
## Ends in an error in state: 4138.
##
## expr -> expr CONR1 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR2 TO
##
## Ends in an error in state: 4130.
##
## expr -> expr CONR2 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR3 TO
##
## Ends in an error in state: 4122.
##
## expr -> expr CONR3 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR4 TO
##
## Ends in an error in state: 4114.
##
## expr -> expr CONR4 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR5 TO
##
## Ends in an error in state: 4106.
##
## expr -> expr CONR5 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR6 TO
##
## Ends in an error in state: 4098.
##
## expr -> expr CONR6 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR7 TO
##
## Ends in an error in state: 4090.
##
## expr -> expr CONR7 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR8 TO
##
## Ends in an error in state: 4082.
##
## expr -> expr CONR8 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING CONR9 TO
##
## Ends in an error in state: 4072.
##
## expr -> expr CONR9 . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING EQ TO
##
## Ends in an error in state: 4070.
##
## expr -> expr EQ . expr [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ STRING TO
##
## Ends in an error in state: 4076.
##
## app -> app . prim [ STRING SEMI NUM IN ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## term -> app . [ SEMI IN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID EQ TO
##
## Ends in an error in state: 3789.
##
## def -> id list(simplex) EQ . topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## id list(simplex) EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID ID TO
##
## Ends in an error in state: 3037.
##
## list(simplex) -> id . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID NUM TO
##
## Ends in an error in state: 107.
##
## list(simplex) -> NUM . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## NUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID STRING TO
##
## Ends in an error in state: 106.
##
## list(simplex) -> STRING . list(simplex) [ EQ ]
##
## The known suffix of the stack is as follows:
## STRING
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET ID TO
##
## Ends in an error in state: 105.
##
## def -> id . list(simplex) EQ topexpr [ SEMI IN EOF END ]
##
## The known suffix of the stack is as follows:
## id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: LET TO
##
## Ends in an error in state: 101.
##
## phrase -> LET . revdefs END [ # ]
## phrase -> LET . revdefs EOF [ # ]
## topexpr -> LET . revdefs IN topexpr [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL0 TO
##
## Ends in an error in state: 50.
##
## symbols -> BINL0 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL1 TO
##
## Ends in an error in state: 49.
##
## symbols -> BINL1 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL2 TO
##
## Ends in an error in state: 48.
##
## symbols -> BINL2 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL3 TO
##
## Ends in an error in state: 47.
##
## symbols -> BINL3 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL4 TO
##
## Ends in an error in state: 46.
##
## symbols -> BINL4 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL5 TO
##
## Ends in an error in state: 45.
##
## symbols -> BINL5 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL6 TO
##
## Ends in an error in state: 44.
##
## symbols -> BINL6 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL7 TO
##
## Ends in an error in state: 43.
##
## symbols -> BINL7 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL8 TO
##
## Ends in an error in state: 42.
##
## symbols -> BINL8 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINL9 TO
##
## Ends in an error in state: 41.
##
## symbols -> BINL9 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR0 TO
##
## Ends in an error in state: 40.
##
## symbols -> BINR0 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR1 TO
##
## Ends in an error in state: 39.
##
## symbols -> BINR1 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR2 TO
##
## Ends in an error in state: 38.
##
## symbols -> BINR2 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR3 TO
##
## Ends in an error in state: 37.
##
## symbols -> BINR3 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR4 TO
##
## Ends in an error in state: 36.
##
## symbols -> BINR4 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR5 TO
##
## Ends in an error in state: 35.
##
## symbols -> BINR5 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR6 TO
##
## Ends in an error in state: 34.
##
## symbols -> BINR6 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR7 TO
##
## Ends in an error in state: 33.
##
## symbols -> BINR7 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR8 TO
##
## Ends in an error in state: 32.
##
## symbols -> BINR8 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID BINR9 TO
##
## Ends in an error in state: 31.
##
## symbols -> BINR9 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONID TO
##
## Ends in an error in state: 30.
##
## symbols -> CONID . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL0 TO
##
## Ends in an error in state: 29.
##
## symbols -> CONL0 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL1 TO
##
## Ends in an error in state: 28.
##
## symbols -> CONL1 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL2 TO
##
## Ends in an error in state: 27.
##
## symbols -> CONL2 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL3 TO
##
## Ends in an error in state: 26.
##
## symbols -> CONL3 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL4 TO
##
## Ends in an error in state: 25.
##
## symbols -> CONL4 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL5 TO
##
## Ends in an error in state: 24.
##
## symbols -> CONL5 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL6 TO
##
## Ends in an error in state: 23.
##
## symbols -> CONL6 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL7 TO
##
## Ends in an error in state: 22.
##
## symbols -> CONL7 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL8 TO
##
## Ends in an error in state: 21.
##
## symbols -> CONL8 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONL9 TO
##
## Ends in an error in state: 20.
##
## symbols -> CONL9 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR0 TO
##
## Ends in an error in state: 19.
##
## symbols -> CONR0 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR1 TO
##
## Ends in an error in state: 18.
##
## symbols -> CONR1 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR2 TO
##
## Ends in an error in state: 17.
##
## symbols -> CONR2 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR3 TO
##
## Ends in an error in state: 16.
##
## symbols -> CONR3 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR4 TO
##
## Ends in an error in state: 15.
##
## symbols -> CONR4 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR5 TO
##
## Ends in an error in state: 14.
##
## symbols -> CONR5 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR6 TO
##
## Ends in an error in state: 13.
##
## symbols -> CONR6 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR7 TO
##
## Ends in an error in state: 12.
##
## symbols -> CONR7 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR8 TO
##
## Ends in an error in state: 11.
##
## symbols -> CONR8 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID CONR9 TO
##
## Ends in an error in state: 10.
##
## symbols -> CONR9 . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID EQ TO
##
## Ends in an error in state: 9.
##
## symbols -> EQ . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID ID TO
##
## Ends in an error in state: 8.
##
## symbols -> ID . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID NUM ALT
##
## Ends in an error in state: 7.
##
## notation -> ID option(NUM) . symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## ID option(NUM)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID SEMI TO
##
## Ends in an error in state: 99.
##
## notations -> notation SEMI . notations [ EOF END ]
##
## The known suffix of the stack is as follows:
## notation SEMI
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION ID TO
##
## Ends in an error in state: 5.
##
## notation -> ID . option(NUM) symbols [ SEMI EOF END ]
##
## The known suffix of the stack is as follows:
## ID
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: NOTATION TO
##
## Ends in an error in state: 4.
##
## phrase -> NOTATION . notations END [ # ]
## phrase -> NOTATION . notations EOF [ # ]
##
## The known suffix of the stack is as follows:
## NOTATION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL0 TO
##
## Ends in an error in state: 4518.
##
## expr -> expr BINL0 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL1 TO
##
## Ends in an error in state: 4510.
##
## expr -> expr BINL1 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL2 TO
##
## Ends in an error in state: 4502.
##
## expr -> expr BINL2 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL3 TO
##
## Ends in an error in state: 4494.
##
## expr -> expr BINL3 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL4 TO
##
## Ends in an error in state: 4486.
##
## expr -> expr BINL4 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL5 TO
##
## Ends in an error in state: 4478.
##
## expr -> expr BINL5 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL6 TO
##
## Ends in an error in state: 4470.
##
## expr -> expr BINL6 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL7 TO
##
## Ends in an error in state: 4462.
##
## expr -> expr BINL7 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL8 TO
##
## Ends in an error in state: 4454.
##
## expr -> expr BINL8 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINL9 TO
##
## Ends in an error in state: 4446.
##
## expr -> expr BINL9 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR0 TO
##
## Ends in an error in state: 4516.
##
## expr -> expr BINR0 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR1 TO
##
## Ends in an error in state: 4508.
##
## expr -> expr BINR1 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR2 TO
##
## Ends in an error in state: 4500.
##
## expr -> expr BINR2 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR3 TO
##
## Ends in an error in state: 4492.
##
## expr -> expr BINR3 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR4 TO
##
## Ends in an error in state: 4484.
##
## expr -> expr BINR4 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR5 TO
##
## Ends in an error in state: 4476.
##
## expr -> expr BINR5 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR6 TO
##
## Ends in an error in state: 4468.
##
## expr -> expr BINR6 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR7 TO
##
## Ends in an error in state: 4460.
##
## expr -> expr BINR7 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR8 TO
##
## Ends in an error in state: 4452.
##
## expr -> expr BINR8 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING BINR9 TO
##
## Ends in an error in state: 4444.
##
## expr -> expr BINR9 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr BINR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL0 TO
##
## Ends in an error in state: 4514.
##
## expr -> expr CONL0 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL1 TO
##
## Ends in an error in state: 4506.
##
## expr -> expr CONL1 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL2 TO
##
## Ends in an error in state: 4498.
##
## expr -> expr CONL2 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL3 TO
##
## Ends in an error in state: 4490.
##
## expr -> expr CONL3 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL4 TO
##
## Ends in an error in state: 4482.
##
## expr -> expr CONL4 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL5 TO
##
## Ends in an error in state: 4474.
##
## expr -> expr CONL5 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL6 TO
##
## Ends in an error in state: 4466.
##
## expr -> expr CONL6 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL7 TO
##
## Ends in an error in state: 4458.
##
## expr -> expr CONL7 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL8 TO
##
## Ends in an error in state: 4450.
##
## expr -> expr CONL8 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONL9 TO
##
## Ends in an error in state: 4440.
##
## expr -> expr CONL9 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONL9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR0 TO
##
## Ends in an error in state: 4512.
##
## expr -> expr CONR0 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR0
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR1 TO
##
## Ends in an error in state: 4504.
##
## expr -> expr CONR1 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR1
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR2 TO
##
## Ends in an error in state: 4496.
##
## expr -> expr CONR2 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR2
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR3 TO
##
## Ends in an error in state: 4488.
##
## expr -> expr CONR3 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR3
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR4 TO
##
## Ends in an error in state: 4480.
##
## expr -> expr CONR4 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR4
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR5 TO
##
## Ends in an error in state: 4472.
##
## expr -> expr CONR5 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR5
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR6 TO
##
## Ends in an error in state: 4464.
##
## expr -> expr CONR6 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR6
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR7 TO
##
## Ends in an error in state: 4456.
##
## expr -> expr CONR7 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR7
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR8 TO
##
## Ends in an error in state: 4448.
##
## expr -> expr CONR8 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR8
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING CONR9 TO
##
## Ends in an error in state: 4438.
##
## expr -> expr CONR9 . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr CONR9
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING EQ TO
##
## Ends in an error in state: 4436.
##
## expr -> expr EQ . expr [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## expr EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: STRING TO
##
## Ends in an error in state: 4442.
##
## app -> app . prim [ STRING SEMI NUM ID FUN EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BRA BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
## term -> app . [ SEMI EQ EOF END CONR9 CONR8 CONR7 CONR6 CONR5 CONR4 CONR3 CONR2 CONR1 CONR0 CONL9 CONL8 CONL7 CONL6 CONL5 CONL4 CONL3 CONL2 CONL1 CONL0 BINR9 BINR8 BINR7 BINR6 BINR5 BINR4 BINR3 BINR2 BINR1 BINR0 BINL9 BINL8 BINL7 BINL6 BINL5 BINL4 BINL3 BINL2 BINL1 BINL0 ]
##
## The known suffix of the stack is as follows:
## app
##

<YOUR SYNTAX ERROR MESSAGE HERE>

phrase: TO
##
## Ends in an error in state: 0.
##
## phrase' -> . phrase [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

